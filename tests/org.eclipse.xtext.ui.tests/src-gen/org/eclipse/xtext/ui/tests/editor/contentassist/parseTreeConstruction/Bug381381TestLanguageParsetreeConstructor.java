/*
* generated by Xtext
*/
package org.eclipse.xtext.ui.tests.editor.contentassist.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import org.eclipse.xtext.ui.tests.editor.contentassist.services.Bug381381TestLanguageGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class Bug381381TestLanguageParsetreeConstructor extends AbstractParseTreeConstructor {
		
	@Inject
	private Bug381381TestLanguageGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_StmtAssignment(this, this, 0, inst);
			case 1: return new CopyFieldNameToVariableStmt_Group(this, this, 1, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule Model ****************
 *
 * Model:
 * 	stmt=CopyFieldNameToVariableStmt;
 *
 **/

// stmt=CopyFieldNameToVariableStmt
protected class Model_StmtAssignment extends AssignmentToken  {
	
	public Model_StmtAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getStmtAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CopyFieldNameToVariableStmt_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getModelRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("stmt",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("stmt");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCopyFieldNameToVariableStmtRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getStmtCopyFieldNameToVariableStmtParserRuleCall_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

/************ end Rule Model ****************/


/************ begin Rule CopyFieldNameToVariableStmt ****************
 *
 * CopyFieldNameToVariableStmt:
 * 	"FIELD-NAME-TO-VARIABLE" ("," "SCREEN" "=" "(" line=INT "," column=INT ")" & "," "VAR" "=" name=ID & ("," "TYPE" "="
 * 	"REPLACE")?);
 *
 **/

// "FIELD-NAME-TO-VARIABLE" ("," "SCREEN" "=" "(" line=INT "," column=INT ")" & "," "VAR" "=" name=ID & ("," "TYPE" "="
// "REPLACE")?)
protected class CopyFieldNameToVariableStmt_Group extends GroupToken {
	
	public CopyFieldNameToVariableStmt_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCopyFieldNameToVariableStmtAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CopyFieldNameToVariableStmt_UnorderedGroup_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCopyFieldNameToVariableStmtRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "FIELD-NAME-TO-VARIABLE"
protected class CopyFieldNameToVariableStmt_FIELDNAMETOVARIABLEKeyword_0 extends KeywordToken  {
	
	public CopyFieldNameToVariableStmt_FIELDNAMETOVARIABLEKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCopyFieldNameToVariableStmtAccess().getFIELDNAMETOVARIABLEKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "," "SCREEN" "=" "(" line=INT "," column=INT ")" & "," "VAR" "=" name=ID & ("," "TYPE" "=" "REPLACE")?
protected class CopyFieldNameToVariableStmt_UnorderedGroup_1 extends UnorderedGroupToken {
	
	public CopyFieldNameToVariableStmt_UnorderedGroup_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getCopyFieldNameToVariableStmtAccess().getUnorderedGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CopyFieldNameToVariableStmt_Group_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "," "SCREEN" "=" "(" line=INT "," column=INT ")"
protected class CopyFieldNameToVariableStmt_Group_1_0 extends GroupToken {
	
	public CopyFieldNameToVariableStmt_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCopyFieldNameToVariableStmtAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CopyFieldNameToVariableStmt_RightParenthesisKeyword_1_0_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class CopyFieldNameToVariableStmt_CommaKeyword_1_0_0 extends KeywordToken  {
	
	public CopyFieldNameToVariableStmt_CommaKeyword_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCopyFieldNameToVariableStmtAccess().getCommaKeyword_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CopyFieldNameToVariableStmt_FIELDNAMETOVARIABLEKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "SCREEN"
protected class CopyFieldNameToVariableStmt_SCREENKeyword_1_0_1 extends KeywordToken  {
	
	public CopyFieldNameToVariableStmt_SCREENKeyword_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCopyFieldNameToVariableStmtAccess().getSCREENKeyword_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CopyFieldNameToVariableStmt_CommaKeyword_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "="
protected class CopyFieldNameToVariableStmt_EqualsSignKeyword_1_0_2 extends KeywordToken  {
	
	public CopyFieldNameToVariableStmt_EqualsSignKeyword_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCopyFieldNameToVariableStmtAccess().getEqualsSignKeyword_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CopyFieldNameToVariableStmt_SCREENKeyword_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class CopyFieldNameToVariableStmt_LeftParenthesisKeyword_1_0_3 extends KeywordToken  {
	
	public CopyFieldNameToVariableStmt_LeftParenthesisKeyword_1_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCopyFieldNameToVariableStmtAccess().getLeftParenthesisKeyword_1_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CopyFieldNameToVariableStmt_EqualsSignKeyword_1_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// line=INT
protected class CopyFieldNameToVariableStmt_LineAssignment_1_0_4 extends AssignmentToken  {
	
	public CopyFieldNameToVariableStmt_LineAssignment_1_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCopyFieldNameToVariableStmtAccess().getLineAssignment_1_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CopyFieldNameToVariableStmt_LeftParenthesisKeyword_1_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("line",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("line");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCopyFieldNameToVariableStmtAccess().getLineINTTerminalRuleCall_1_0_4_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getCopyFieldNameToVariableStmtAccess().getLineINTTerminalRuleCall_1_0_4_0();
			return obj;
		}
		return null;
	}

}

// ","
protected class CopyFieldNameToVariableStmt_CommaKeyword_1_0_5 extends KeywordToken  {
	
	public CopyFieldNameToVariableStmt_CommaKeyword_1_0_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCopyFieldNameToVariableStmtAccess().getCommaKeyword_1_0_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CopyFieldNameToVariableStmt_LineAssignment_1_0_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// column=INT
protected class CopyFieldNameToVariableStmt_ColumnAssignment_1_0_6 extends AssignmentToken  {
	
	public CopyFieldNameToVariableStmt_ColumnAssignment_1_0_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCopyFieldNameToVariableStmtAccess().getColumnAssignment_1_0_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CopyFieldNameToVariableStmt_CommaKeyword_1_0_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("column",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("column");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCopyFieldNameToVariableStmtAccess().getColumnINTTerminalRuleCall_1_0_6_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getCopyFieldNameToVariableStmtAccess().getColumnINTTerminalRuleCall_1_0_6_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class CopyFieldNameToVariableStmt_RightParenthesisKeyword_1_0_7 extends KeywordToken  {
	
	public CopyFieldNameToVariableStmt_RightParenthesisKeyword_1_0_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCopyFieldNameToVariableStmtAccess().getRightParenthesisKeyword_1_0_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CopyFieldNameToVariableStmt_ColumnAssignment_1_0_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// "," "VAR" "=" name=ID
protected class CopyFieldNameToVariableStmt_Group_1_1 extends GroupToken {
	
	public CopyFieldNameToVariableStmt_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCopyFieldNameToVariableStmtAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CopyFieldNameToVariableStmt_NameAssignment_1_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class CopyFieldNameToVariableStmt_CommaKeyword_1_1_0 extends KeywordToken  {
	
	public CopyFieldNameToVariableStmt_CommaKeyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCopyFieldNameToVariableStmtAccess().getCommaKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CopyFieldNameToVariableStmt_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "VAR"
protected class CopyFieldNameToVariableStmt_VARKeyword_1_1_1 extends KeywordToken  {
	
	public CopyFieldNameToVariableStmt_VARKeyword_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCopyFieldNameToVariableStmtAccess().getVARKeyword_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CopyFieldNameToVariableStmt_CommaKeyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "="
protected class CopyFieldNameToVariableStmt_EqualsSignKeyword_1_1_2 extends KeywordToken  {
	
	public CopyFieldNameToVariableStmt_EqualsSignKeyword_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCopyFieldNameToVariableStmtAccess().getEqualsSignKeyword_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CopyFieldNameToVariableStmt_VARKeyword_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class CopyFieldNameToVariableStmt_NameAssignment_1_1_3 extends AssignmentToken  {
	
	public CopyFieldNameToVariableStmt_NameAssignment_1_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCopyFieldNameToVariableStmtAccess().getNameAssignment_1_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CopyFieldNameToVariableStmt_EqualsSignKeyword_1_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCopyFieldNameToVariableStmtAccess().getNameIDTerminalRuleCall_1_1_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getCopyFieldNameToVariableStmtAccess().getNameIDTerminalRuleCall_1_1_3_0();
			return obj;
		}
		return null;
	}

}




/************ end Rule CopyFieldNameToVariableStmt ****************/

}
