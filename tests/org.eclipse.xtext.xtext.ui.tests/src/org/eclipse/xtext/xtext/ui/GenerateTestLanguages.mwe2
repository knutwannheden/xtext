/*******************************************************************************
 * Copyright (c) 2010 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *******************************************************************************/
module org.eclipse.xtext.xtext.ui.GenerateTestLanguages

import org.eclipse.emf.mwe2.runtime.workflow.Workflow
import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.*
import org.eclipse.xtext.generator.*
import org.eclipse.xtext.ui.generator.*
import org.eclipse.xtext.generator.ecore2xtext.Ecore2XtextValueConverterServiceFragment

var projectName = "org.eclipse.xtext.xtext.ui.tests"
var runtimeProject = "../${projectName}"

Workflow {
	bean = StandaloneSetup {
		platformUri = "${runtimeProject}/../.."
		registerEcoreFile = "platform:/resource/org.eclipse.xtext.xtext.ui.tests/src/org/eclipse/xtext/xtext/ui/ecore2xtext/Ecore2XtextTest.ecore"
		registerGenModelFile = "platform:/resource/org.eclipse.xtext.xtext.ui.tests/src/org/eclipse/xtext/xtext/ui/ecore2xtext/Ecore2XtextTest.genmodel"
	} 
	
	component = DirectoryCleaner {
		directory="${runtimeProject}/src-gen"
	} 
	
	component = Generator {
		pathRtProject = "${runtimeProject}"
		pathUiProject = "${runtimeProject}"
		projectNameRt = "${projectName}"
		activator = "org.eclipse.xtext.xtext.ui.tests.Activator"
		
		language = { 
			uri="classpath:/org/eclipse/xtext/xtext/ui/ecore2xtext/Ecore2XtextTest.xtext"
			fragment = ecore.EcoreGeneratorFragment {
				emfRuntimeVersion = "2.5"
			}
			fragment = grammarAccess.GrammarAccessFragment {}
			fragment = parseTreeConstructor.ParseTreeConstructorFragment {}
			fragment = resourceFactory.ResourceFactoryFragment {} 
			fragment = parser.antlr.XtextAntlrGeneratorFragment {
				options = {
					classSplitting = true
				}
			}
			fragment = contentAssist.JavaBasedContentAssistFragment {}
			fragment = parser.antlr.XtextAntlrUiGeneratorFragment {
				options = {
					classSplitting = true
				}
			}
			fragment = Ecore2XtextValueConverterServiceFragment {}
		}
	}
}