// automatically generated by Xtext
grammar org.eclipse.xtext.xtext.ui.ecore2xtext.Ecore2XtextTest with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/xtext/ecore2xtext" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Root returns Root:
	{Root}
	'Root'
	name=INT0
	'{'
		('classes' '{' classes+=Abstract ( "," classes+=Abstract)* '}' )?
		('concrete0' concrete0=Concrete0)?
	'}';

Abstract returns Abstract:
	Concrete0_Impl | Concrete1_Impl | DiamondInheritance;

Concrete0 returns Concrete0:
	Concrete0_Impl | DiamondInheritance;

INT0 returns INT:
	'INT' /* TODO: implement this rule and an appropriate IValueConverter */;

Concrete0_Impl returns Concrete0:
	{Concrete0}
	'Concrete0'
	name=EString;

EString returns ecore::EString:
	STRING | ID;

Concrete1_Impl returns Concrete1:
	{Concrete1}
	'Concrete1'
	name=EString;

DiamondInheritance returns DiamondInheritance:
	{DiamondInheritance}
	'DiamondInheritance'
	name=EString;
