/*
* generated by Xtext
*/
package org.eclipse.xtext.serializer.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import org.eclipse.xtext.serializer.services.SequencerTestLanguageGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class SequencerTestLanguageParsetreeConstructor extends AbstractParseTreeConstructor {
		
	@Inject
	private SequencerTestLanguageGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_Alternatives(this, this, 0, inst);
			case 1: return new SimpleGroup_Group(this, this, 1, inst);
			case 2: return new SimpleAlternative_Group(this, this, 2, inst);
			case 3: return new SimpleMultiplicities_Group(this, this, 3, inst);
			case 4: return new GroupMultiplicities_Group(this, this, 4, inst);
			case 5: return new AlternativeMultiplicities_Group(this, this, 5, inst);
			case 6: return new List1_Group(this, this, 6, inst);
			case 7: return new List2_Group(this, this, 7, inst);
			case 8: return new AltList1_Group(this, this, 8, inst);
			case 9: return new AltList2_Group(this, this, 9, inst);
			case 10: return new SingleKeywords_Group(this, this, 10, inst);
			case 11: return new SingleKeywordsOrID_Group(this, this, 11, inst);
			case 12: return new SingleTerminals_Group(this, this, 12, inst);
			case 13: return new SingleEnum_Group(this, this, 13, inst);
			case 14: return new SingleCrossReference_Group(this, this, 14, inst);
			case 15: return new SingleContainmentReference_Group(this, this, 15, inst);
			case 16: return new SingleContainmentReferenceChild1_ValAssignment(this, this, 16, inst);
			case 17: return new SingleContainmentReferenceChild2_ValAssignment(this, this, 17, inst);
			case 18: return new SingleContainmentReferenceChild3_ValAssignment(this, this, 18, inst);
			case 19: return new MultiKeywords_Group(this, this, 19, inst);
			case 20: return new MultiKeywordsOrID_Group(this, this, 20, inst);
			case 21: return new MultiTerminals_Group(this, this, 21, inst);
			case 22: return new DependentAlternative1_Group(this, this, 22, inst);
			case 23: return new DependentAlternative2_Group(this, this, 23, inst);
			case 24: return new Optional_Group(this, this, 24, inst);
			case 25: return new Float_Group(this, this, 25, inst);
			case 26: return new UnorderedAlternative_Group(this, this, 26, inst);
			case 27: return new UnorderedAlternativeVal_Group(this, this, 27, inst);
			case 28: return new UnorderedAlternativeValDelegate_UnorderedAlternativeVal2ParserRuleCall(this, this, 28, inst);
			case 29: return new UnorderedAlternativeVal2_Group(this, this, 29, inst);
			case 30: return new UnorderedGroup_Group(this, this, 30, inst);
			case 31: return new UnorderedGroupVal_Group(this, this, 31, inst);
			case 32: return new UnorderedGroupValDelegate_UnorderedGroupVal2ParserRuleCall(this, this, 32, inst);
			case 33: return new UnorderedGroupVal2_Group(this, this, 33, inst);
			case 34: return new UnorderedGroupOptional_Group(this, this, 34, inst);
			case 35: return new UnorderedGroupBoolean_Group(this, this, 35, inst);
			case 36: return new Complex1_Group(this, this, 36, inst);
			case 37: return new OptionalDouble_Group(this, this, 37, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule Model ****************
 *
 * Model:
 * 	x1=SimpleGroup | x2=SimpleAlternative | x3=SimpleMultiplicities | x4=GroupMultiplicities |
 * 	x5=AlternativeMultiplicities | x6=List1 | x7=List2 | x8=AltList1 | x9=AltList2 | x10=SingleKeywords |
 * 	x11=SingleKeywordsOrID | x12=SingleTerminals | x10=MultiKeywords | x11=MultiKeywordsOrID | x12=MultiTerminals |
 * 	x13=SingleEnum | x14=SingleCrossReference | x15=SingleContainmentReference | x19=DependentAlternative1 |
 * 	x20=DependentAlternative2 | x21=Optional | x22=Float | x23=UnorderedAlternative | x24=UnorderedGroup |
 * 	x25=UnorderedGroupOptional | x26=UnorderedGroupBoolean | x27=Complex1 | x28=OptionalDouble;
 *
 **/

// x1=SimpleGroup | x2=SimpleAlternative | x3=SimpleMultiplicities | x4=GroupMultiplicities | x5=AlternativeMultiplicities
// | x6=List1 | x7=List2 | x8=AltList1 | x9=AltList2 | x10=SingleKeywords | x11=SingleKeywordsOrID | x12=SingleTerminals |
// x10=MultiKeywords | x11=MultiKeywordsOrID | x12=MultiTerminals | x13=SingleEnum | x14=SingleCrossReference |
// x15=SingleContainmentReference | x19=DependentAlternative1 | x20=DependentAlternative2 | x21=Optional | x22=Float |
// x23=UnorderedAlternative | x24=UnorderedGroup | x25=UnorderedGroupOptional | x26=UnorderedGroupBoolean | x27=Complex1 |
// x28=OptionalDouble
protected class Model_Alternatives extends AlternativesToken {

	public Model_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getModelAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_X1Assignment_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Model_X2Assignment_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Model_X3Assignment_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Model_X4Assignment_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Model_X5Assignment_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Model_X6Assignment_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Model_X7Assignment_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Model_X8Assignment_7(lastRuleCallOrigin, this, 7, inst);
			case 8: return new Model_X9Assignment_8(lastRuleCallOrigin, this, 8, inst);
			case 9: return new Model_X10Assignment_9(lastRuleCallOrigin, this, 9, inst);
			case 10: return new Model_X11Assignment_10(lastRuleCallOrigin, this, 10, inst);
			case 11: return new Model_X12Assignment_11(lastRuleCallOrigin, this, 11, inst);
			case 12: return new Model_X10Assignment_12(lastRuleCallOrigin, this, 12, inst);
			case 13: return new Model_X11Assignment_13(lastRuleCallOrigin, this, 13, inst);
			case 14: return new Model_X12Assignment_14(lastRuleCallOrigin, this, 14, inst);
			case 15: return new Model_X13Assignment_15(lastRuleCallOrigin, this, 15, inst);
			case 16: return new Model_X14Assignment_16(lastRuleCallOrigin, this, 16, inst);
			case 17: return new Model_X15Assignment_17(lastRuleCallOrigin, this, 17, inst);
			case 18: return new Model_X19Assignment_18(lastRuleCallOrigin, this, 18, inst);
			case 19: return new Model_X20Assignment_19(lastRuleCallOrigin, this, 19, inst);
			case 20: return new Model_X21Assignment_20(lastRuleCallOrigin, this, 20, inst);
			case 21: return new Model_X22Assignment_21(lastRuleCallOrigin, this, 21, inst);
			case 22: return new Model_X23Assignment_22(lastRuleCallOrigin, this, 22, inst);
			case 23: return new Model_X24Assignment_23(lastRuleCallOrigin, this, 23, inst);
			case 24: return new Model_X25Assignment_24(lastRuleCallOrigin, this, 24, inst);
			case 25: return new Model_X26Assignment_25(lastRuleCallOrigin, this, 25, inst);
			case 26: return new Model_X27Assignment_26(lastRuleCallOrigin, this, 26, inst);
			case 27: return new Model_X28Assignment_27(lastRuleCallOrigin, this, 27, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getModelRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// x1=SimpleGroup
protected class Model_X1Assignment_0 extends AssignmentToken  {
	
	public Model_X1Assignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX1Assignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimpleGroup_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x1");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSimpleGroupRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX1SimpleGroupParserRuleCall_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x2=SimpleAlternative
protected class Model_X2Assignment_1 extends AssignmentToken  {
	
	public Model_X2Assignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX2Assignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimpleAlternative_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x2");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSimpleAlternativeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX2SimpleAlternativeParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x3=SimpleMultiplicities
protected class Model_X3Assignment_2 extends AssignmentToken  {
	
	public Model_X3Assignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX3Assignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimpleMultiplicities_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x3",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x3");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSimpleMultiplicitiesRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX3SimpleMultiplicitiesParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x4=GroupMultiplicities
protected class Model_X4Assignment_3 extends AssignmentToken  {
	
	public Model_X4Assignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX4Assignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GroupMultiplicities_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x4",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x4");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getGroupMultiplicitiesRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX4GroupMultiplicitiesParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x5=AlternativeMultiplicities
protected class Model_X5Assignment_4 extends AssignmentToken  {
	
	public Model_X5Assignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX5Assignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeMultiplicities_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x5",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x5");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAlternativeMultiplicitiesRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX5AlternativeMultiplicitiesParserRuleCall_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x6=List1
protected class Model_X6Assignment_5 extends AssignmentToken  {
	
	public Model_X6Assignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX6Assignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List1_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x6",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x6");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getList1Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX6List1ParserRuleCall_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x7=List2
protected class Model_X7Assignment_6 extends AssignmentToken  {
	
	public Model_X7Assignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX7Assignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List2_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x7",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x7");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getList2Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX7List2ParserRuleCall_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x8=AltList1
protected class Model_X8Assignment_7 extends AssignmentToken  {
	
	public Model_X8Assignment_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX8Assignment_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList1_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x8",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x8");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAltList1Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX8AltList1ParserRuleCall_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x9=AltList2
protected class Model_X9Assignment_8 extends AssignmentToken  {
	
	public Model_X9Assignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX9Assignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList2_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x9",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x9");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAltList2Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX9AltList2ParserRuleCall_8_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x10=SingleKeywords
protected class Model_X10Assignment_9 extends AssignmentToken  {
	
	public Model_X10Assignment_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX10Assignment_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleKeywords_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x10",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x10");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSingleKeywordsRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX10SingleKeywordsParserRuleCall_9_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x11=SingleKeywordsOrID
protected class Model_X11Assignment_10 extends AssignmentToken  {
	
	public Model_X11Assignment_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX11Assignment_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleKeywordsOrID_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x11",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x11");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSingleKeywordsOrIDRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX11SingleKeywordsOrIDParserRuleCall_10_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x12=SingleTerminals
protected class Model_X12Assignment_11 extends AssignmentToken  {
	
	public Model_X12Assignment_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX12Assignment_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleTerminals_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x12",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x12");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSingleTerminalsRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX12SingleTerminalsParserRuleCall_11_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x10=MultiKeywords
protected class Model_X10Assignment_12 extends AssignmentToken  {
	
	public Model_X10Assignment_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX10Assignment_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultiKeywords_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x10",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x10");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMultiKeywordsRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX10MultiKeywordsParserRuleCall_12_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x11=MultiKeywordsOrID
protected class Model_X11Assignment_13 extends AssignmentToken  {
	
	public Model_X11Assignment_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX11Assignment_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultiKeywordsOrID_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x11",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x11");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMultiKeywordsOrIDRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX11MultiKeywordsOrIDParserRuleCall_13_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x12=MultiTerminals
protected class Model_X12Assignment_14 extends AssignmentToken  {
	
	public Model_X12Assignment_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX12Assignment_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultiTerminals_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x12",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x12");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMultiTerminalsRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX12MultiTerminalsParserRuleCall_14_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x13=SingleEnum
protected class Model_X13Assignment_15 extends AssignmentToken  {
	
	public Model_X13Assignment_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX13Assignment_15();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleEnum_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x13",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x13");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSingleEnumRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX13SingleEnumParserRuleCall_15_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x14=SingleCrossReference
protected class Model_X14Assignment_16 extends AssignmentToken  {
	
	public Model_X14Assignment_16(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX14Assignment_16();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleCrossReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x14",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x14");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSingleCrossReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX14SingleCrossReferenceParserRuleCall_16_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x15=SingleContainmentReference
protected class Model_X15Assignment_17 extends AssignmentToken  {
	
	public Model_X15Assignment_17(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX15Assignment_17();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleContainmentReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x15",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x15");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSingleContainmentReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX15SingleContainmentReferenceParserRuleCall_17_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x19=DependentAlternative1
protected class Model_X19Assignment_18 extends AssignmentToken  {
	
	public Model_X19Assignment_18(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX19Assignment_18();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DependentAlternative1_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x19",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x19");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDependentAlternative1Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX19DependentAlternative1ParserRuleCall_18_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x20=DependentAlternative2
protected class Model_X20Assignment_19 extends AssignmentToken  {
	
	public Model_X20Assignment_19(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX20Assignment_19();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DependentAlternative2_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x20",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x20");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDependentAlternative2Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX20DependentAlternative2ParserRuleCall_19_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x21=Optional
protected class Model_X21Assignment_20 extends AssignmentToken  {
	
	public Model_X21Assignment_20(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX21Assignment_20();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Optional_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x21",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x21");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getOptionalRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX21OptionalParserRuleCall_20_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x22=Float
protected class Model_X22Assignment_21 extends AssignmentToken  {
	
	public Model_X22Assignment_21(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX22Assignment_21();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Float_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x22",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x22");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFloatRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX22FloatParserRuleCall_21_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x23=UnorderedAlternative
protected class Model_X23Assignment_22 extends AssignmentToken  {
	
	public Model_X23Assignment_22(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX23Assignment_22();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedAlternative_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x23",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x23");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getUnorderedAlternativeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX23UnorderedAlternativeParserRuleCall_22_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x24=UnorderedGroup
protected class Model_X24Assignment_23 extends AssignmentToken  {
	
	public Model_X24Assignment_23(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX24Assignment_23();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroup_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x24",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x24");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getUnorderedGroupRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX24UnorderedGroupParserRuleCall_23_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x25=UnorderedGroupOptional
protected class Model_X25Assignment_24 extends AssignmentToken  {
	
	public Model_X25Assignment_24(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX25Assignment_24();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupOptional_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x25",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x25");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getUnorderedGroupOptionalRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX25UnorderedGroupOptionalParserRuleCall_24_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x26=UnorderedGroupBoolean
protected class Model_X26Assignment_25 extends AssignmentToken  {
	
	public Model_X26Assignment_25(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX26Assignment_25();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupBoolean_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x26",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x26");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getUnorderedGroupBooleanRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX26UnorderedGroupBooleanParserRuleCall_25_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x27=Complex1
protected class Model_X27Assignment_26 extends AssignmentToken  {
	
	public Model_X27Assignment_26(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX27Assignment_26();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Complex1_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x27",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x27");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComplex1Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX27Complex1ParserRuleCall_26_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// x28=OptionalDouble
protected class Model_X28Assignment_27 extends AssignmentToken  {
	
	public Model_X28Assignment_27(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getX28Assignment_27();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OptionalDouble_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x28",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x28");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getOptionalDoubleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getX28OptionalDoubleParserRuleCall_27_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}


/************ end Rule Model ****************/


/************ begin Rule SimpleGroup ****************
 *
 * SimpleGroup:
 * 	"#1" val1=ID val2=ID;
 *
 **/

// "#1" val1=ID val2=ID
protected class SimpleGroup_Group extends GroupToken {
	
	public SimpleGroup_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSimpleGroupAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimpleGroup_Val2Assignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSimpleGroupRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#1"
protected class SimpleGroup_NumberSignDigitOneKeyword_0 extends KeywordToken  {
	
	public SimpleGroup_NumberSignDigitOneKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSimpleGroupAccess().getNumberSignDigitOneKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// val1=ID
protected class SimpleGroup_Val1Assignment_1 extends AssignmentToken  {
	
	public SimpleGroup_Val1Assignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSimpleGroupAccess().getVal1Assignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimpleGroup_NumberSignDigitOneKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSimpleGroupAccess().getVal1IDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSimpleGroupAccess().getVal1IDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// val2=ID
protected class SimpleGroup_Val2Assignment_2 extends AssignmentToken  {
	
	public SimpleGroup_Val2Assignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSimpleGroupAccess().getVal2Assignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimpleGroup_Val1Assignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val2");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSimpleGroupAccess().getVal2IDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSimpleGroupAccess().getVal2IDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule SimpleGroup ****************/


/************ begin Rule SimpleAlternative ****************
 *
 * SimpleAlternative:
 * 	"#2" ("kw1" val1=ID | "kw2" val2=ID);
 *
 **/

// "#2" ("kw1" val1=ID | "kw2" val2=ID)
protected class SimpleAlternative_Group extends GroupToken {
	
	public SimpleAlternative_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSimpleAlternativeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimpleAlternative_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSimpleAlternativeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#2"
protected class SimpleAlternative_NumberSignDigitTwoKeyword_0 extends KeywordToken  {
	
	public SimpleAlternative_NumberSignDigitTwoKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSimpleAlternativeAccess().getNumberSignDigitTwoKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "kw1" val1=ID | "kw2" val2=ID
protected class SimpleAlternative_Alternatives_1 extends AlternativesToken {

	public SimpleAlternative_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSimpleAlternativeAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimpleAlternative_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SimpleAlternative_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "kw1" val1=ID
protected class SimpleAlternative_Group_1_0 extends GroupToken {
	
	public SimpleAlternative_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSimpleAlternativeAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimpleAlternative_Val1Assignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "kw1"
protected class SimpleAlternative_Kw1Keyword_1_0_0 extends KeywordToken  {
	
	public SimpleAlternative_Kw1Keyword_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSimpleAlternativeAccess().getKw1Keyword_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimpleAlternative_NumberSignDigitTwoKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// val1=ID
protected class SimpleAlternative_Val1Assignment_1_0_1 extends AssignmentToken  {
	
	public SimpleAlternative_Val1Assignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSimpleAlternativeAccess().getVal1Assignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimpleAlternative_Kw1Keyword_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSimpleAlternativeAccess().getVal1IDTerminalRuleCall_1_0_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSimpleAlternativeAccess().getVal1IDTerminalRuleCall_1_0_1_0();
			return obj;
		}
		return null;
	}

}


// "kw2" val2=ID
protected class SimpleAlternative_Group_1_1 extends GroupToken {
	
	public SimpleAlternative_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSimpleAlternativeAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimpleAlternative_Val2Assignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "kw2"
protected class SimpleAlternative_Kw2Keyword_1_1_0 extends KeywordToken  {
	
	public SimpleAlternative_Kw2Keyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSimpleAlternativeAccess().getKw2Keyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimpleAlternative_NumberSignDigitTwoKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// val2=ID
protected class SimpleAlternative_Val2Assignment_1_1_1 extends AssignmentToken  {
	
	public SimpleAlternative_Val2Assignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSimpleAlternativeAccess().getVal2Assignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimpleAlternative_Kw2Keyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val2");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSimpleAlternativeAccess().getVal2IDTerminalRuleCall_1_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSimpleAlternativeAccess().getVal2IDTerminalRuleCall_1_1_1_0();
			return obj;
		}
		return null;
	}

}




/************ end Rule SimpleAlternative ****************/


/************ begin Rule SimpleMultiplicities ****************
 *
 * SimpleMultiplicities:
 * 	"#3" val1=ID "kw1" val2=ID? "kw2" val3+=ID+ "kw3" val4+=ID*;
 *
 **/

// "#3" val1=ID "kw1" val2=ID? "kw2" val3+=ID+ "kw3" val4+=ID*
protected class SimpleMultiplicities_Group extends GroupToken {
	
	public SimpleMultiplicities_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSimpleMultiplicitiesAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimpleMultiplicities_Val4Assignment_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SimpleMultiplicities_Kw3Keyword_6(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSimpleMultiplicitiesRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#3"
protected class SimpleMultiplicities_NumberSignDigitThreeKeyword_0 extends KeywordToken  {
	
	public SimpleMultiplicities_NumberSignDigitThreeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSimpleMultiplicitiesAccess().getNumberSignDigitThreeKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// val1=ID
protected class SimpleMultiplicities_Val1Assignment_1 extends AssignmentToken  {
	
	public SimpleMultiplicities_Val1Assignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSimpleMultiplicitiesAccess().getVal1Assignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimpleMultiplicities_NumberSignDigitThreeKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSimpleMultiplicitiesAccess().getVal1IDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSimpleMultiplicitiesAccess().getVal1IDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "kw1"
protected class SimpleMultiplicities_Kw1Keyword_2 extends KeywordToken  {
	
	public SimpleMultiplicities_Kw1Keyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSimpleMultiplicitiesAccess().getKw1Keyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimpleMultiplicities_Val1Assignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// val2=ID?
protected class SimpleMultiplicities_Val2Assignment_3 extends AssignmentToken  {
	
	public SimpleMultiplicities_Val2Assignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSimpleMultiplicitiesAccess().getVal2Assignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimpleMultiplicities_Kw1Keyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val2",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val2");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSimpleMultiplicitiesAccess().getVal2IDTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSimpleMultiplicitiesAccess().getVal2IDTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// "kw2"
protected class SimpleMultiplicities_Kw2Keyword_4 extends KeywordToken  {
	
	public SimpleMultiplicities_Kw2Keyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSimpleMultiplicitiesAccess().getKw2Keyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimpleMultiplicities_Val2Assignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SimpleMultiplicities_Kw1Keyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// val3+=ID+
protected class SimpleMultiplicities_Val3Assignment_5 extends AssignmentToken  {
	
	public SimpleMultiplicities_Val3Assignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSimpleMultiplicitiesAccess().getVal3Assignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimpleMultiplicities_Val3Assignment_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SimpleMultiplicities_Kw2Keyword_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val3",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val3");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSimpleMultiplicitiesAccess().getVal3IDTerminalRuleCall_5_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSimpleMultiplicitiesAccess().getVal3IDTerminalRuleCall_5_0();
			return obj;
		}
		return null;
	}

}

// "kw3"
protected class SimpleMultiplicities_Kw3Keyword_6 extends KeywordToken  {
	
	public SimpleMultiplicities_Kw3Keyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSimpleMultiplicitiesAccess().getKw3Keyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimpleMultiplicities_Val3Assignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// val4+=ID*
protected class SimpleMultiplicities_Val4Assignment_7 extends AssignmentToken  {
	
	public SimpleMultiplicities_Val4Assignment_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSimpleMultiplicitiesAccess().getVal4Assignment_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimpleMultiplicities_Val4Assignment_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SimpleMultiplicities_Kw3Keyword_6(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val4",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val4");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSimpleMultiplicitiesAccess().getVal4IDTerminalRuleCall_7_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSimpleMultiplicitiesAccess().getVal4IDTerminalRuleCall_7_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule SimpleMultiplicities ****************/


/************ begin Rule GroupMultiplicities ****************
 *
 * GroupMultiplicities:
 * 	"#4" val1=ID "kw1" (val2=ID val3=ID)? "kw2" (val4+=ID val5+=ID)+ "kw3" (val6+=ID val7+=ID)*;
 *
 **/

// "#4" val1=ID "kw1" (val2=ID val3=ID)? "kw2" (val4+=ID val5+=ID)+ "kw3" (val6+=ID val7+=ID)*
protected class GroupMultiplicities_Group extends GroupToken {
	
	public GroupMultiplicities_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGroupMultiplicitiesAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GroupMultiplicities_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new GroupMultiplicities_Kw3Keyword_6(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getGroupMultiplicitiesRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#4"
protected class GroupMultiplicities_NumberSignDigitFourKeyword_0 extends KeywordToken  {
	
	public GroupMultiplicities_NumberSignDigitFourKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGroupMultiplicitiesAccess().getNumberSignDigitFourKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// val1=ID
protected class GroupMultiplicities_Val1Assignment_1 extends AssignmentToken  {
	
	public GroupMultiplicities_Val1Assignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGroupMultiplicitiesAccess().getVal1Assignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GroupMultiplicities_NumberSignDigitFourKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGroupMultiplicitiesAccess().getVal1IDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getGroupMultiplicitiesAccess().getVal1IDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "kw1"
protected class GroupMultiplicities_Kw1Keyword_2 extends KeywordToken  {
	
	public GroupMultiplicities_Kw1Keyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGroupMultiplicitiesAccess().getKw1Keyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GroupMultiplicities_Val1Assignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (val2=ID val3=ID)?
protected class GroupMultiplicities_Group_3 extends GroupToken {
	
	public GroupMultiplicities_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGroupMultiplicitiesAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GroupMultiplicities_Val3Assignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// val2=ID
protected class GroupMultiplicities_Val2Assignment_3_0 extends AssignmentToken  {
	
	public GroupMultiplicities_Val2Assignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGroupMultiplicitiesAccess().getVal2Assignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GroupMultiplicities_Kw1Keyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val2");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGroupMultiplicitiesAccess().getVal2IDTerminalRuleCall_3_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getGroupMultiplicitiesAccess().getVal2IDTerminalRuleCall_3_0_0();
			return obj;
		}
		return null;
	}

}

// val3=ID
protected class GroupMultiplicities_Val3Assignment_3_1 extends AssignmentToken  {
	
	public GroupMultiplicities_Val3Assignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGroupMultiplicitiesAccess().getVal3Assignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GroupMultiplicities_Val2Assignment_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val3",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val3");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGroupMultiplicitiesAccess().getVal3IDTerminalRuleCall_3_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getGroupMultiplicitiesAccess().getVal3IDTerminalRuleCall_3_1_0();
			return obj;
		}
		return null;
	}

}


// "kw2"
protected class GroupMultiplicities_Kw2Keyword_4 extends KeywordToken  {
	
	public GroupMultiplicities_Kw2Keyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGroupMultiplicitiesAccess().getKw2Keyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GroupMultiplicities_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new GroupMultiplicities_Kw1Keyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (val4+=ID val5+=ID)+
protected class GroupMultiplicities_Group_5 extends GroupToken {
	
	public GroupMultiplicities_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGroupMultiplicitiesAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GroupMultiplicities_Val5Assignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// val4+=ID
protected class GroupMultiplicities_Val4Assignment_5_0 extends AssignmentToken  {
	
	public GroupMultiplicities_Val4Assignment_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGroupMultiplicitiesAccess().getVal4Assignment_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GroupMultiplicities_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new GroupMultiplicities_Kw2Keyword_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val4",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val4");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGroupMultiplicitiesAccess().getVal4IDTerminalRuleCall_5_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getGroupMultiplicitiesAccess().getVal4IDTerminalRuleCall_5_0_0();
			return obj;
		}
		return null;
	}

}

// val5+=ID
protected class GroupMultiplicities_Val5Assignment_5_1 extends AssignmentToken  {
	
	public GroupMultiplicities_Val5Assignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGroupMultiplicitiesAccess().getVal5Assignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GroupMultiplicities_Val4Assignment_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val5",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val5");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGroupMultiplicitiesAccess().getVal5IDTerminalRuleCall_5_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getGroupMultiplicitiesAccess().getVal5IDTerminalRuleCall_5_1_0();
			return obj;
		}
		return null;
	}

}


// "kw3"
protected class GroupMultiplicities_Kw3Keyword_6 extends KeywordToken  {
	
	public GroupMultiplicities_Kw3Keyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGroupMultiplicitiesAccess().getKw3Keyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GroupMultiplicities_Group_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (val6+=ID val7+=ID)*
protected class GroupMultiplicities_Group_7 extends GroupToken {
	
	public GroupMultiplicities_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGroupMultiplicitiesAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GroupMultiplicities_Val7Assignment_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// val6+=ID
protected class GroupMultiplicities_Val6Assignment_7_0 extends AssignmentToken  {
	
	public GroupMultiplicities_Val6Assignment_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGroupMultiplicitiesAccess().getVal6Assignment_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GroupMultiplicities_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new GroupMultiplicities_Kw3Keyword_6(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val6",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val6");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGroupMultiplicitiesAccess().getVal6IDTerminalRuleCall_7_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getGroupMultiplicitiesAccess().getVal6IDTerminalRuleCall_7_0_0();
			return obj;
		}
		return null;
	}

}

// val7+=ID
protected class GroupMultiplicities_Val7Assignment_7_1 extends AssignmentToken  {
	
	public GroupMultiplicities_Val7Assignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGroupMultiplicitiesAccess().getVal7Assignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GroupMultiplicities_Val6Assignment_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val7",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val7");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGroupMultiplicitiesAccess().getVal7IDTerminalRuleCall_7_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getGroupMultiplicitiesAccess().getVal7IDTerminalRuleCall_7_1_0();
			return obj;
		}
		return null;
	}

}



/************ end Rule GroupMultiplicities ****************/


/************ begin Rule AlternativeMultiplicities ****************
 *
 * AlternativeMultiplicities:
 * 	"#5" (val2=ID | "kw1" val3=ID)? "kw2" (val4+=ID | "kw3" val5+=ID)+ "kw4" (val6+=ID | "kw5" val7+=ID)*;
 *
 **/

// "#5" (val2=ID | "kw1" val3=ID)? "kw2" (val4+=ID | "kw3" val5+=ID)+ "kw4" (val6+=ID | "kw5" val7+=ID)*
protected class AlternativeMultiplicities_Group extends GroupToken {
	
	public AlternativeMultiplicities_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAlternativeMultiplicitiesAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeMultiplicities_Alternatives_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AlternativeMultiplicities_Kw4Keyword_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAlternativeMultiplicitiesRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#5"
protected class AlternativeMultiplicities_NumberSignDigitFiveKeyword_0 extends KeywordToken  {
	
	public AlternativeMultiplicities_NumberSignDigitFiveKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAlternativeMultiplicitiesAccess().getNumberSignDigitFiveKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// (val2=ID | "kw1" val3=ID)?
protected class AlternativeMultiplicities_Alternatives_1 extends AlternativesToken {

	public AlternativeMultiplicities_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAlternativeMultiplicitiesAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeMultiplicities_Val2Assignment_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AlternativeMultiplicities_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// val2=ID
protected class AlternativeMultiplicities_Val2Assignment_1_0 extends AssignmentToken  {
	
	public AlternativeMultiplicities_Val2Assignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAlternativeMultiplicitiesAccess().getVal2Assignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeMultiplicities_NumberSignDigitFiveKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val2");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAlternativeMultiplicitiesAccess().getVal2IDTerminalRuleCall_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAlternativeMultiplicitiesAccess().getVal2IDTerminalRuleCall_1_0_0();
			return obj;
		}
		return null;
	}

}

// "kw1" val3=ID
protected class AlternativeMultiplicities_Group_1_1 extends GroupToken {
	
	public AlternativeMultiplicities_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAlternativeMultiplicitiesAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeMultiplicities_Val3Assignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "kw1"
protected class AlternativeMultiplicities_Kw1Keyword_1_1_0 extends KeywordToken  {
	
	public AlternativeMultiplicities_Kw1Keyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAlternativeMultiplicitiesAccess().getKw1Keyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeMultiplicities_NumberSignDigitFiveKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// val3=ID
protected class AlternativeMultiplicities_Val3Assignment_1_1_1 extends AssignmentToken  {
	
	public AlternativeMultiplicities_Val3Assignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAlternativeMultiplicitiesAccess().getVal3Assignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeMultiplicities_Kw1Keyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val3",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val3");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAlternativeMultiplicitiesAccess().getVal3IDTerminalRuleCall_1_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAlternativeMultiplicitiesAccess().getVal3IDTerminalRuleCall_1_1_1_0();
			return obj;
		}
		return null;
	}

}



// "kw2"
protected class AlternativeMultiplicities_Kw2Keyword_2 extends KeywordToken  {
	
	public AlternativeMultiplicities_Kw2Keyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAlternativeMultiplicitiesAccess().getKw2Keyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeMultiplicities_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AlternativeMultiplicities_NumberSignDigitFiveKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// (val4+=ID | "kw3" val5+=ID)+
protected class AlternativeMultiplicities_Alternatives_3 extends AlternativesToken {

	public AlternativeMultiplicities_Alternatives_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAlternativeMultiplicitiesAccess().getAlternatives_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeMultiplicities_Val4Assignment_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AlternativeMultiplicities_Group_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// val4+=ID
protected class AlternativeMultiplicities_Val4Assignment_3_0 extends AssignmentToken  {
	
	public AlternativeMultiplicities_Val4Assignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAlternativeMultiplicitiesAccess().getVal4Assignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeMultiplicities_Alternatives_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AlternativeMultiplicities_Kw2Keyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val4",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val4");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAlternativeMultiplicitiesAccess().getVal4IDTerminalRuleCall_3_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAlternativeMultiplicitiesAccess().getVal4IDTerminalRuleCall_3_0_0();
			return obj;
		}
		return null;
	}

}

// "kw3" val5+=ID
protected class AlternativeMultiplicities_Group_3_1 extends GroupToken {
	
	public AlternativeMultiplicities_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAlternativeMultiplicitiesAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeMultiplicities_Val5Assignment_3_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "kw3"
protected class AlternativeMultiplicities_Kw3Keyword_3_1_0 extends KeywordToken  {
	
	public AlternativeMultiplicities_Kw3Keyword_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAlternativeMultiplicitiesAccess().getKw3Keyword_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeMultiplicities_Alternatives_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AlternativeMultiplicities_Kw2Keyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// val5+=ID
protected class AlternativeMultiplicities_Val5Assignment_3_1_1 extends AssignmentToken  {
	
	public AlternativeMultiplicities_Val5Assignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAlternativeMultiplicitiesAccess().getVal5Assignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeMultiplicities_Kw3Keyword_3_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val5",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val5");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAlternativeMultiplicitiesAccess().getVal5IDTerminalRuleCall_3_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAlternativeMultiplicitiesAccess().getVal5IDTerminalRuleCall_3_1_1_0();
			return obj;
		}
		return null;
	}

}



// "kw4"
protected class AlternativeMultiplicities_Kw4Keyword_4 extends KeywordToken  {
	
	public AlternativeMultiplicities_Kw4Keyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAlternativeMultiplicitiesAccess().getKw4Keyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeMultiplicities_Alternatives_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (val6+=ID | "kw5" val7+=ID)*
protected class AlternativeMultiplicities_Alternatives_5 extends AlternativesToken {

	public AlternativeMultiplicities_Alternatives_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAlternativeMultiplicitiesAccess().getAlternatives_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeMultiplicities_Val6Assignment_5_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AlternativeMultiplicities_Group_5_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// val6+=ID
protected class AlternativeMultiplicities_Val6Assignment_5_0 extends AssignmentToken  {
	
	public AlternativeMultiplicities_Val6Assignment_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAlternativeMultiplicitiesAccess().getVal6Assignment_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeMultiplicities_Alternatives_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AlternativeMultiplicities_Kw4Keyword_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val6",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val6");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAlternativeMultiplicitiesAccess().getVal6IDTerminalRuleCall_5_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAlternativeMultiplicitiesAccess().getVal6IDTerminalRuleCall_5_0_0();
			return obj;
		}
		return null;
	}

}

// "kw5" val7+=ID
protected class AlternativeMultiplicities_Group_5_1 extends GroupToken {
	
	public AlternativeMultiplicities_Group_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAlternativeMultiplicitiesAccess().getGroup_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeMultiplicities_Val7Assignment_5_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "kw5"
protected class AlternativeMultiplicities_Kw5Keyword_5_1_0 extends KeywordToken  {
	
	public AlternativeMultiplicities_Kw5Keyword_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAlternativeMultiplicitiesAccess().getKw5Keyword_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeMultiplicities_Alternatives_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AlternativeMultiplicities_Kw4Keyword_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// val7+=ID
protected class AlternativeMultiplicities_Val7Assignment_5_1_1 extends AssignmentToken  {
	
	public AlternativeMultiplicities_Val7Assignment_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAlternativeMultiplicitiesAccess().getVal7Assignment_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AlternativeMultiplicities_Kw5Keyword_5_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val7",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val7");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAlternativeMultiplicitiesAccess().getVal7IDTerminalRuleCall_5_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAlternativeMultiplicitiesAccess().getVal7IDTerminalRuleCall_5_1_1_0();
			return obj;
		}
		return null;
	}

}




/************ end Rule AlternativeMultiplicities ****************/


/************ begin Rule List1 ****************
 *
 * List1:
 * 	"#6" val1+=ID ("," val1+=ID)*;
 *
 **/

// "#6" val1+=ID ("," val1+=ID)*
protected class List1_Group extends GroupToken {
	
	public List1_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getList1Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List1_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new List1_Val1Assignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getList1Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#6"
protected class List1_NumberSignDigitSixKeyword_0 extends KeywordToken  {
	
	public List1_NumberSignDigitSixKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getList1Access().getNumberSignDigitSixKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// val1+=ID
protected class List1_Val1Assignment_1 extends AssignmentToken  {
	
	public List1_Val1Assignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getList1Access().getVal1Assignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List1_NumberSignDigitSixKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getList1Access().getVal1IDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getList1Access().getVal1IDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ("," val1+=ID)*
protected class List1_Group_2 extends GroupToken {
	
	public List1_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getList1Access().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List1_Val1Assignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class List1_CommaKeyword_2_0 extends KeywordToken  {
	
	public List1_CommaKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getList1Access().getCommaKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List1_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new List1_Val1Assignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// val1+=ID
protected class List1_Val1Assignment_2_1 extends AssignmentToken  {
	
	public List1_Val1Assignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getList1Access().getVal1Assignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List1_CommaKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val1",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getList1Access().getVal1IDTerminalRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getList1Access().getVal1IDTerminalRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}



/************ end Rule List1 ****************/


/************ begin Rule List2 ****************
 *
 * List2:
 * 	"#7" {List2} (val1+=ID ("," val1+=ID)*)?;
 *
 **/

// "#7" {List2} (val1+=ID ("," val1+=ID)*)?
protected class List2_Group extends GroupToken {
	
	public List2_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getList2Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List2_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new List2_List2Action_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getList2Access().getList2Action_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#7"
protected class List2_NumberSignDigitSevenKeyword_0 extends KeywordToken  {
	
	public List2_NumberSignDigitSevenKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getList2Access().getNumberSignDigitSevenKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// {List2}
protected class List2_List2Action_1 extends ActionToken  {

	public List2_List2Action_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getList2Access().getList2Action_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List2_NumberSignDigitSevenKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// (val1+=ID ("," val1+=ID)*)?
protected class List2_Group_2 extends GroupToken {
	
	public List2_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getList2Access().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List2_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new List2_Val1Assignment_2_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// val1+=ID
protected class List2_Val1Assignment_2_0 extends AssignmentToken  {
	
	public List2_Val1Assignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getList2Access().getVal1Assignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List2_List2Action_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getList2Access().getVal1IDTerminalRuleCall_2_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getList2Access().getVal1IDTerminalRuleCall_2_0_0();
			return obj;
		}
		return null;
	}

}

// ("," val1+=ID)*
protected class List2_Group_2_1 extends GroupToken {
	
	public List2_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getList2Access().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List2_Val1Assignment_2_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class List2_CommaKeyword_2_1_0 extends KeywordToken  {
	
	public List2_CommaKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getList2Access().getCommaKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List2_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new List2_Val1Assignment_2_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// val1+=ID
protected class List2_Val1Assignment_2_1_1 extends AssignmentToken  {
	
	public List2_Val1Assignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getList2Access().getVal1Assignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List2_CommaKeyword_2_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val1",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getList2Access().getVal1IDTerminalRuleCall_2_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getList2Access().getVal1IDTerminalRuleCall_2_1_1_0();
			return obj;
		}
		return null;
	}

}




/************ end Rule List2 ****************/


/************ begin Rule AltList1 ****************
 *
 * AltList1:
 * 	"#8" (val1=ID val2=ID | "kw1" val1=ID val3=ID | "kw2" val1=ID val4=ID?);
 *
 **/

// "#8" (val1=ID val2=ID | "kw1" val1=ID val3=ID | "kw2" val1=ID val4=ID?)
protected class AltList1_Group extends GroupToken {
	
	public AltList1_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAltList1Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList1_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAltList1Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#8"
protected class AltList1_NumberSignDigitEightKeyword_0 extends KeywordToken  {
	
	public AltList1_NumberSignDigitEightKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAltList1Access().getNumberSignDigitEightKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// val1=ID val2=ID | "kw1" val1=ID val3=ID | "kw2" val1=ID val4=ID?
protected class AltList1_Alternatives_1 extends AlternativesToken {

	public AltList1_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAltList1Access().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList1_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AltList1_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AltList1_Group_1_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// val1=ID val2=ID
protected class AltList1_Group_1_0 extends GroupToken {
	
	public AltList1_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAltList1Access().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList1_Val2Assignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// val1=ID
protected class AltList1_Val1Assignment_1_0_0 extends AssignmentToken  {
	
	public AltList1_Val1Assignment_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAltList1Access().getVal1Assignment_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList1_NumberSignDigitEightKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAltList1Access().getVal1IDTerminalRuleCall_1_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAltList1Access().getVal1IDTerminalRuleCall_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// val2=ID
protected class AltList1_Val2Assignment_1_0_1 extends AssignmentToken  {
	
	public AltList1_Val2Assignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAltList1Access().getVal2Assignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList1_Val1Assignment_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val2");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAltList1Access().getVal2IDTerminalRuleCall_1_0_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAltList1Access().getVal2IDTerminalRuleCall_1_0_1_0();
			return obj;
		}
		return null;
	}

}


// "kw1" val1=ID val3=ID
protected class AltList1_Group_1_1 extends GroupToken {
	
	public AltList1_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAltList1Access().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList1_Val3Assignment_1_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "kw1"
protected class AltList1_Kw1Keyword_1_1_0 extends KeywordToken  {
	
	public AltList1_Kw1Keyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAltList1Access().getKw1Keyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList1_NumberSignDigitEightKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// val1=ID
protected class AltList1_Val1Assignment_1_1_1 extends AssignmentToken  {
	
	public AltList1_Val1Assignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAltList1Access().getVal1Assignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList1_Kw1Keyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAltList1Access().getVal1IDTerminalRuleCall_1_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAltList1Access().getVal1IDTerminalRuleCall_1_1_1_0();
			return obj;
		}
		return null;
	}

}

// val3=ID
protected class AltList1_Val3Assignment_1_1_2 extends AssignmentToken  {
	
	public AltList1_Val3Assignment_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAltList1Access().getVal3Assignment_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList1_Val1Assignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val3",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val3");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAltList1Access().getVal3IDTerminalRuleCall_1_1_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAltList1Access().getVal3IDTerminalRuleCall_1_1_2_0();
			return obj;
		}
		return null;
	}

}


// "kw2" val1=ID val4=ID?
protected class AltList1_Group_1_2 extends GroupToken {
	
	public AltList1_Group_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAltList1Access().getGroup_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList1_Val4Assignment_1_2_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AltList1_Val1Assignment_1_2_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "kw2"
protected class AltList1_Kw2Keyword_1_2_0 extends KeywordToken  {
	
	public AltList1_Kw2Keyword_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAltList1Access().getKw2Keyword_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList1_NumberSignDigitEightKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// val1=ID
protected class AltList1_Val1Assignment_1_2_1 extends AssignmentToken  {
	
	public AltList1_Val1Assignment_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAltList1Access().getVal1Assignment_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList1_Kw2Keyword_1_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAltList1Access().getVal1IDTerminalRuleCall_1_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAltList1Access().getVal1IDTerminalRuleCall_1_2_1_0();
			return obj;
		}
		return null;
	}

}

// val4=ID?
protected class AltList1_Val4Assignment_1_2_2 extends AssignmentToken  {
	
	public AltList1_Val4Assignment_1_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAltList1Access().getVal4Assignment_1_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList1_Val1Assignment_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val4",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val4");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAltList1Access().getVal4IDTerminalRuleCall_1_2_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAltList1Access().getVal4IDTerminalRuleCall_1_2_2_0();
			return obj;
		}
		return null;
	}

}




/************ end Rule AltList1 ****************/


/************ begin Rule AltList2 ****************
 *
 * AltList2:
 * 	"#9" (val1+=ID val2=ID | "kw" val1+=ID ("," val1+=ID)* val3=ID);
 *
 **/

// "#9" (val1+=ID val2=ID | "kw" val1+=ID ("," val1+=ID)* val3=ID)
protected class AltList2_Group extends GroupToken {
	
	public AltList2_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAltList2Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList2_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAltList2Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#9"
protected class AltList2_NumberSignDigitNineKeyword_0 extends KeywordToken  {
	
	public AltList2_NumberSignDigitNineKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAltList2Access().getNumberSignDigitNineKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// val1+=ID val2=ID | "kw" val1+=ID ("," val1+=ID)* val3=ID
protected class AltList2_Alternatives_1 extends AlternativesToken {

	public AltList2_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAltList2Access().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList2_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AltList2_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// val1+=ID val2=ID
protected class AltList2_Group_1_0 extends GroupToken {
	
	public AltList2_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAltList2Access().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList2_Val2Assignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// val1+=ID
protected class AltList2_Val1Assignment_1_0_0 extends AssignmentToken  {
	
	public AltList2_Val1Assignment_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAltList2Access().getVal1Assignment_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList2_NumberSignDigitNineKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAltList2Access().getVal1IDTerminalRuleCall_1_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAltList2Access().getVal1IDTerminalRuleCall_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// val2=ID
protected class AltList2_Val2Assignment_1_0_1 extends AssignmentToken  {
	
	public AltList2_Val2Assignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAltList2Access().getVal2Assignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList2_Val1Assignment_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val2");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAltList2Access().getVal2IDTerminalRuleCall_1_0_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAltList2Access().getVal2IDTerminalRuleCall_1_0_1_0();
			return obj;
		}
		return null;
	}

}


// "kw" val1+=ID ("," val1+=ID)* val3=ID
protected class AltList2_Group_1_1 extends GroupToken {
	
	public AltList2_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAltList2Access().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList2_Val3Assignment_1_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "kw"
protected class AltList2_KwKeyword_1_1_0 extends KeywordToken  {
	
	public AltList2_KwKeyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAltList2Access().getKwKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList2_NumberSignDigitNineKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// val1+=ID
protected class AltList2_Val1Assignment_1_1_1 extends AssignmentToken  {
	
	public AltList2_Val1Assignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAltList2Access().getVal1Assignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList2_KwKeyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAltList2Access().getVal1IDTerminalRuleCall_1_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAltList2Access().getVal1IDTerminalRuleCall_1_1_1_0();
			return obj;
		}
		return null;
	}

}

// ("," val1+=ID)*
protected class AltList2_Group_1_1_2 extends GroupToken {
	
	public AltList2_Group_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAltList2Access().getGroup_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList2_Val1Assignment_1_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class AltList2_CommaKeyword_1_1_2_0 extends KeywordToken  {
	
	public AltList2_CommaKeyword_1_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAltList2Access().getCommaKeyword_1_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList2_Group_1_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AltList2_Val1Assignment_1_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// val1+=ID
protected class AltList2_Val1Assignment_1_1_2_1 extends AssignmentToken  {
	
	public AltList2_Val1Assignment_1_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAltList2Access().getVal1Assignment_1_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList2_CommaKeyword_1_1_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val1",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAltList2Access().getVal1IDTerminalRuleCall_1_1_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAltList2Access().getVal1IDTerminalRuleCall_1_1_2_1_0();
			return obj;
		}
		return null;
	}

}


// val3=ID
protected class AltList2_Val3Assignment_1_1_3 extends AssignmentToken  {
	
	public AltList2_Val3Assignment_1_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAltList2Access().getVal3Assignment_1_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AltList2_Group_1_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AltList2_Val1Assignment_1_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val3",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val3");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAltList2Access().getVal3IDTerminalRuleCall_1_1_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAltList2Access().getVal3IDTerminalRuleCall_1_1_3_0();
			return obj;
		}
		return null;
	}

}




/************ end Rule AltList2 ****************/


/************ begin Rule SingleKeywords ****************
 *
 * SingleKeywords:
 * 	"#10" val=("kw1" | "kw2" | "kw3");
 *
 **/

// "#10" val=("kw1" | "kw2" | "kw3")
protected class SingleKeywords_Group extends GroupToken {
	
	public SingleKeywords_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSingleKeywordsAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleKeywords_ValAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSingleKeywordsRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#10"
protected class SingleKeywords_NumberSignDigitOneDigitZeroKeyword_0 extends KeywordToken  {
	
	public SingleKeywords_NumberSignDigitOneDigitZeroKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSingleKeywordsAccess().getNumberSignDigitOneDigitZeroKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// val=("kw1" | "kw2" | "kw3")
protected class SingleKeywords_ValAssignment_1 extends AssignmentToken  {
	
	public SingleKeywords_ValAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSingleKeywordsAccess().getValAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleKeywords_NumberSignDigitOneDigitZeroKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getSingleKeywordsAccess().getValKw1Keyword_1_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSingleKeywordsAccess().getValKw1Keyword_1_0_0();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getSingleKeywordsAccess().getValKw2Keyword_1_0_1(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSingleKeywordsAccess().getValKw2Keyword_1_0_1();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getSingleKeywordsAccess().getValKw3Keyword_1_0_2(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSingleKeywordsAccess().getValKw3Keyword_1_0_2();
			return obj;
		}
		return null;
	}

}


/************ end Rule SingleKeywords ****************/


/************ begin Rule SingleKeywordsOrID ****************
 *
 * SingleKeywordsOrID:
 * 	"#11" val=("kw1" | "kw2" | "kw3" | ID);
 *
 **/

// "#11" val=("kw1" | "kw2" | "kw3" | ID)
protected class SingleKeywordsOrID_Group extends GroupToken {
	
	public SingleKeywordsOrID_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSingleKeywordsOrIDAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleKeywordsOrID_ValAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSingleKeywordsOrIDRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#11"
protected class SingleKeywordsOrID_NumberSignDigitOneDigitOneKeyword_0 extends KeywordToken  {
	
	public SingleKeywordsOrID_NumberSignDigitOneDigitOneKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSingleKeywordsOrIDAccess().getNumberSignDigitOneDigitOneKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// val=("kw1" | "kw2" | "kw3" | ID)
protected class SingleKeywordsOrID_ValAssignment_1 extends AssignmentToken  {
	
	public SingleKeywordsOrID_ValAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSingleKeywordsOrIDAccess().getValAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleKeywordsOrID_NumberSignDigitOneDigitOneKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getSingleKeywordsOrIDAccess().getValKw1Keyword_1_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSingleKeywordsOrIDAccess().getValKw1Keyword_1_0_0();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getSingleKeywordsOrIDAccess().getValKw2Keyword_1_0_1(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSingleKeywordsOrIDAccess().getValKw2Keyword_1_0_1();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getSingleKeywordsOrIDAccess().getValKw3Keyword_1_0_2(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSingleKeywordsOrIDAccess().getValKw3Keyword_1_0_2();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSingleKeywordsOrIDAccess().getValIDTerminalRuleCall_1_0_3(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSingleKeywordsOrIDAccess().getValIDTerminalRuleCall_1_0_3();
			return obj;
		}
		return null;
	}

}


/************ end Rule SingleKeywordsOrID ****************/


/************ begin Rule SingleTerminals ****************
 *
 * SingleTerminals:
 * 	"#12" val=(ID1 | ID2);
 *
 **/

// "#12" val=(ID1 | ID2)
protected class SingleTerminals_Group extends GroupToken {
	
	public SingleTerminals_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSingleTerminalsAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleTerminals_ValAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSingleTerminalsRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#12"
protected class SingleTerminals_NumberSignDigitOneDigitTwoKeyword_0 extends KeywordToken  {
	
	public SingleTerminals_NumberSignDigitOneDigitTwoKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSingleTerminalsAccess().getNumberSignDigitOneDigitTwoKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// val=(ID1 | ID2)
protected class SingleTerminals_ValAssignment_1 extends AssignmentToken  {
	
	public SingleTerminals_ValAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSingleTerminalsAccess().getValAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleTerminals_NumberSignDigitOneDigitTwoKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSingleTerminalsAccess().getValID1TerminalRuleCall_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSingleTerminalsAccess().getValID1TerminalRuleCall_1_0_0();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSingleTerminalsAccess().getValID2TerminalRuleCall_1_0_1(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSingleTerminalsAccess().getValID2TerminalRuleCall_1_0_1();
			return obj;
		}
		return null;
	}

}


/************ end Rule SingleTerminals ****************/


/************ begin Rule SingleEnum ****************
 *
 * SingleEnum:
 * 	"#13" val=(DefEnum1 | DefEnum2 | DefEnum3);
 *
 **/

// "#13" val=(DefEnum1 | DefEnum2 | DefEnum3)
protected class SingleEnum_Group extends GroupToken {
	
	public SingleEnum_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSingleEnumAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleEnum_ValAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSingleEnumRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#13"
protected class SingleEnum_NumberSignDigitOneDigitThreeKeyword_0 extends KeywordToken  {
	
	public SingleEnum_NumberSignDigitOneDigitThreeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSingleEnumAccess().getNumberSignDigitOneDigitThreeKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// val=(DefEnum1 | DefEnum2 | DefEnum3)
protected class SingleEnum_ValAssignment_1 extends AssignmentToken  {
	
	public SingleEnum_ValAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSingleEnumAccess().getValAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleEnum_NumberSignDigitOneDigitThreeKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getSingleEnumAccess().getValDefEnum1EnumRuleCall_1_0_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getSingleEnumAccess().getValDefEnum1EnumRuleCall_1_0_0();
			return obj;
		}
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getSingleEnumAccess().getValDefEnum2EnumRuleCall_1_0_1(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getSingleEnumAccess().getValDefEnum2EnumRuleCall_1_0_1();
			return obj;
		}
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getSingleEnumAccess().getValDefEnum3EnumRuleCall_1_0_2(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getSingleEnumAccess().getValDefEnum3EnumRuleCall_1_0_2();
			return obj;
		}
		return null;
	}

}


/************ end Rule SingleEnum ****************/


/************ begin Rule SingleCrossReference ****************
 *
 * SingleCrossReference:
 * 	"#14" name=(ID1 | ID2 | ID3) (ref=[SingleCrossReference|ID1] | ref=[SingleCrossReference|ID2] |
 * 	ref=[SingleCrossReference|ID3]);
 *
 **/

// "#14" name=(ID1 | ID2 | ID3) (ref=[SingleCrossReference|ID1] | ref=[SingleCrossReference|ID2] |
// ref=[SingleCrossReference|ID3])
protected class SingleCrossReference_Group extends GroupToken {
	
	public SingleCrossReference_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSingleCrossReferenceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleCrossReference_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSingleCrossReferenceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#14"
protected class SingleCrossReference_NumberSignDigitOneDigitFourKeyword_0 extends KeywordToken  {
	
	public SingleCrossReference_NumberSignDigitOneDigitFourKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSingleCrossReferenceAccess().getNumberSignDigitOneDigitFourKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=(ID1 | ID2 | ID3)
protected class SingleCrossReference_NameAssignment_1 extends AssignmentToken  {
	
	public SingleCrossReference_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSingleCrossReferenceAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleCrossReference_NumberSignDigitOneDigitFourKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSingleCrossReferenceAccess().getNameID1TerminalRuleCall_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSingleCrossReferenceAccess().getNameID1TerminalRuleCall_1_0_0();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSingleCrossReferenceAccess().getNameID2TerminalRuleCall_1_0_1(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSingleCrossReferenceAccess().getNameID2TerminalRuleCall_1_0_1();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSingleCrossReferenceAccess().getNameID3TerminalRuleCall_1_0_2(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSingleCrossReferenceAccess().getNameID3TerminalRuleCall_1_0_2();
			return obj;
		}
		return null;
	}

}

// ref=[SingleCrossReference|ID1] | ref=[SingleCrossReference|ID2] | ref=[SingleCrossReference|ID3]
protected class SingleCrossReference_Alternatives_2 extends AlternativesToken {

	public SingleCrossReference_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSingleCrossReferenceAccess().getAlternatives_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleCrossReference_RefAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SingleCrossReference_RefAssignment_2_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SingleCrossReference_RefAssignment_2_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ref=[SingleCrossReference|ID1]
protected class SingleCrossReference_RefAssignment_2_0 extends AssignmentToken  {
	
	public SingleCrossReference_RefAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSingleCrossReferenceAccess().getRefAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleCrossReference_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSingleCrossReferenceAccess().getRefSingleCrossReferenceCrossReference_2_0_0().getType().getClassifier()) && crossRefSerializer.isValid(obj.getEObject(), grammarAccess.getSingleCrossReferenceAccess().getRefSingleCrossReferenceCrossReference_2_0_0(), (EObject)value , null)) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSingleCrossReferenceAccess().getRefSingleCrossReferenceCrossReference_2_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ref=[SingleCrossReference|ID2]
protected class SingleCrossReference_RefAssignment_2_1 extends AssignmentToken  {
	
	public SingleCrossReference_RefAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSingleCrossReferenceAccess().getRefAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleCrossReference_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSingleCrossReferenceAccess().getRefSingleCrossReferenceCrossReference_2_1_0().getType().getClassifier()) && crossRefSerializer.isValid(obj.getEObject(), grammarAccess.getSingleCrossReferenceAccess().getRefSingleCrossReferenceCrossReference_2_1_0(), (EObject)value , null)) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSingleCrossReferenceAccess().getRefSingleCrossReferenceCrossReference_2_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ref=[SingleCrossReference|ID3]
protected class SingleCrossReference_RefAssignment_2_2 extends AssignmentToken  {
	
	public SingleCrossReference_RefAssignment_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSingleCrossReferenceAccess().getRefAssignment_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleCrossReference_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSingleCrossReferenceAccess().getRefSingleCrossReferenceCrossReference_2_2_0().getType().getClassifier()) && crossRefSerializer.isValid(obj.getEObject(), grammarAccess.getSingleCrossReferenceAccess().getRefSingleCrossReferenceCrossReference_2_2_0(), (EObject)value , null)) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSingleCrossReferenceAccess().getRefSingleCrossReferenceCrossReference_2_2_0(); 
				return obj;
			}
		}
		return null;
	}

}



/************ end Rule SingleCrossReference ****************/


/************ begin Rule SingleContainmentReference ****************
 *
 * SingleContainmentReference:
 * 	"#15" child=(SingleContainmentReferenceChild1 | SingleContainmentReferenceChild2 | SingleContainmentReferenceChild3);
 *
 **/

// "#15" child=(SingleContainmentReferenceChild1 | SingleContainmentReferenceChild2 | SingleContainmentReferenceChild3)
protected class SingleContainmentReference_Group extends GroupToken {
	
	public SingleContainmentReference_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSingleContainmentReferenceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleContainmentReference_ChildAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSingleContainmentReferenceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#15"
protected class SingleContainmentReference_NumberSignDigitOneDigitFiveKeyword_0 extends KeywordToken  {
	
	public SingleContainmentReference_NumberSignDigitOneDigitFiveKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSingleContainmentReferenceAccess().getNumberSignDigitOneDigitFiveKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// child=(SingleContainmentReferenceChild1 | SingleContainmentReferenceChild2 | SingleContainmentReferenceChild3)
protected class SingleContainmentReference_ChildAssignment_1 extends AssignmentToken  {
	
	public SingleContainmentReference_ChildAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSingleContainmentReferenceAccess().getChildAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SingleContainmentReferenceChild1_ValAssignment(this, this, 0, inst);
			case 1: return new SingleContainmentReferenceChild2_ValAssignment(this, this, 1, inst);
			case 2: return new SingleContainmentReferenceChild3_ValAssignment(this, this, 2, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSingleContainmentReferenceChild1Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSingleContainmentReferenceAccess().getChildSingleContainmentReferenceChild1ParserRuleCall_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSingleContainmentReferenceChild2Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSingleContainmentReferenceAccess().getChildSingleContainmentReferenceChild2ParserRuleCall_1_0_1(); 
				consumed = obj;
				return param;
			}
		}
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSingleContainmentReferenceChild3Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSingleContainmentReferenceAccess().getChildSingleContainmentReferenceChild3ParserRuleCall_1_0_2(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SingleContainmentReference_NumberSignDigitOneDigitFiveKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule SingleContainmentReference ****************/


/************ begin Rule SingleContainmentReferenceChild1 ****************
 *
 * SingleContainmentReferenceChild1:
 * 	val="kw1";
 *
 **/

// val="kw1"
protected class SingleContainmentReferenceChild1_ValAssignment extends AssignmentToken  {
	
	public SingleContainmentReferenceChild1_ValAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSingleContainmentReferenceChild1Access().getValAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSingleContainmentReferenceChild1Rule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("val",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getSingleContainmentReferenceChild1Access().getValKw1Keyword_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSingleContainmentReferenceChild1Access().getValKw1Keyword_0();
			return obj;
		}
		return null;
	}

}

/************ end Rule SingleContainmentReferenceChild1 ****************/


/************ begin Rule SingleContainmentReferenceChild2 ****************
 *
 * SingleContainmentReferenceChild2:
 * 	val="kw2";
 *
 **/

// val="kw2"
protected class SingleContainmentReferenceChild2_ValAssignment extends AssignmentToken  {
	
	public SingleContainmentReferenceChild2_ValAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSingleContainmentReferenceChild2Access().getValAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSingleContainmentReferenceChild2Rule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("val",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getSingleContainmentReferenceChild2Access().getValKw2Keyword_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSingleContainmentReferenceChild2Access().getValKw2Keyword_0();
			return obj;
		}
		return null;
	}

}

/************ end Rule SingleContainmentReferenceChild2 ****************/


/************ begin Rule SingleContainmentReferenceChild3 ****************
 *
 * SingleContainmentReferenceChild3:
 * 	val="kw3";
 *
 **/

// val="kw3"
protected class SingleContainmentReferenceChild3_ValAssignment extends AssignmentToken  {
	
	public SingleContainmentReferenceChild3_ValAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSingleContainmentReferenceChild3Access().getValAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSingleContainmentReferenceChild3Rule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("val",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getSingleContainmentReferenceChild3Access().getValKw3Keyword_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSingleContainmentReferenceChild3Access().getValKw3Keyword_0();
			return obj;
		}
		return null;
	}

}

/************ end Rule SingleContainmentReferenceChild3 ****************/


/************ begin Rule MultiKeywords ****************
 *
 * MultiKeywords:
 * 	"#16" val+=("kw1" | "kw2" | "kw3");
 *
 **/

// "#16" val+=("kw1" | "kw2" | "kw3")
protected class MultiKeywords_Group extends GroupToken {
	
	public MultiKeywords_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMultiKeywordsAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultiKeywords_ValAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMultiKeywordsRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#16"
protected class MultiKeywords_NumberSignDigitOneDigitSixKeyword_0 extends KeywordToken  {
	
	public MultiKeywords_NumberSignDigitOneDigitSixKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMultiKeywordsAccess().getNumberSignDigitOneDigitSixKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// val+=("kw1" | "kw2" | "kw3")
protected class MultiKeywords_ValAssignment_1 extends AssignmentToken  {
	
	public MultiKeywords_ValAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMultiKeywordsAccess().getValAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultiKeywords_NumberSignDigitOneDigitSixKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getMultiKeywordsAccess().getValKw1Keyword_1_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getMultiKeywordsAccess().getValKw1Keyword_1_0_0();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getMultiKeywordsAccess().getValKw2Keyword_1_0_1(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getMultiKeywordsAccess().getValKw2Keyword_1_0_1();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getMultiKeywordsAccess().getValKw3Keyword_1_0_2(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getMultiKeywordsAccess().getValKw3Keyword_1_0_2();
			return obj;
		}
		return null;
	}

}


/************ end Rule MultiKeywords ****************/


/************ begin Rule MultiKeywordsOrID ****************
 *
 * MultiKeywordsOrID:
 * 	"#17" val+=("kw1" | "kw2" | "kw3" | ID);
 *
 **/

// "#17" val+=("kw1" | "kw2" | "kw3" | ID)
protected class MultiKeywordsOrID_Group extends GroupToken {
	
	public MultiKeywordsOrID_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMultiKeywordsOrIDAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultiKeywordsOrID_ValAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMultiKeywordsOrIDRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#17"
protected class MultiKeywordsOrID_NumberSignDigitOneDigitSevenKeyword_0 extends KeywordToken  {
	
	public MultiKeywordsOrID_NumberSignDigitOneDigitSevenKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMultiKeywordsOrIDAccess().getNumberSignDigitOneDigitSevenKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// val+=("kw1" | "kw2" | "kw3" | ID)
protected class MultiKeywordsOrID_ValAssignment_1 extends AssignmentToken  {
	
	public MultiKeywordsOrID_ValAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMultiKeywordsOrIDAccess().getValAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultiKeywordsOrID_NumberSignDigitOneDigitSevenKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getMultiKeywordsOrIDAccess().getValKw1Keyword_1_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getMultiKeywordsOrIDAccess().getValKw1Keyword_1_0_0();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getMultiKeywordsOrIDAccess().getValKw2Keyword_1_0_1(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getMultiKeywordsOrIDAccess().getValKw2Keyword_1_0_1();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getMultiKeywordsOrIDAccess().getValKw3Keyword_1_0_2(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getMultiKeywordsOrIDAccess().getValKw3Keyword_1_0_2();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMultiKeywordsOrIDAccess().getValIDTerminalRuleCall_1_0_3(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMultiKeywordsOrIDAccess().getValIDTerminalRuleCall_1_0_3();
			return obj;
		}
		return null;
	}

}


/************ end Rule MultiKeywordsOrID ****************/


/************ begin Rule MultiTerminals ****************
 *
 * MultiTerminals:
 * 	"#18" val+=(ID1 | ID2);
 *
 **/

// "#18" val+=(ID1 | ID2)
protected class MultiTerminals_Group extends GroupToken {
	
	public MultiTerminals_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMultiTerminalsAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultiTerminals_ValAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMultiTerminalsRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#18"
protected class MultiTerminals_NumberSignDigitOneDigitEightKeyword_0 extends KeywordToken  {
	
	public MultiTerminals_NumberSignDigitOneDigitEightKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMultiTerminalsAccess().getNumberSignDigitOneDigitEightKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// val+=(ID1 | ID2)
protected class MultiTerminals_ValAssignment_1 extends AssignmentToken  {
	
	public MultiTerminals_ValAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMultiTerminalsAccess().getValAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultiTerminals_NumberSignDigitOneDigitEightKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMultiTerminalsAccess().getValID1TerminalRuleCall_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMultiTerminalsAccess().getValID1TerminalRuleCall_1_0_0();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMultiTerminalsAccess().getValID2TerminalRuleCall_1_0_1(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMultiTerminalsAccess().getValID2TerminalRuleCall_1_0_1();
			return obj;
		}
		return null;
	}

}


/************ end Rule MultiTerminals ****************/


/************ begin Rule DependentAlternative1 ****************
 *
 * DependentAlternative1:
 * 	"#19" (val=ID | val=ID flag?="kw1");
 *
 **/

// "#19" (val=ID | val=ID flag?="kw1")
protected class DependentAlternative1_Group extends GroupToken {
	
	public DependentAlternative1_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDependentAlternative1Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DependentAlternative1_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDependentAlternative1Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#19"
protected class DependentAlternative1_NumberSignDigitOneDigitNineKeyword_0 extends KeywordToken  {
	
	public DependentAlternative1_NumberSignDigitOneDigitNineKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDependentAlternative1Access().getNumberSignDigitOneDigitNineKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// val=ID | val=ID flag?="kw1"
protected class DependentAlternative1_Alternatives_1 extends AlternativesToken {

	public DependentAlternative1_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDependentAlternative1Access().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DependentAlternative1_ValAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DependentAlternative1_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// val=ID
protected class DependentAlternative1_ValAssignment_1_0 extends AssignmentToken  {
	
	public DependentAlternative1_ValAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDependentAlternative1Access().getValAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DependentAlternative1_NumberSignDigitOneDigitNineKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDependentAlternative1Access().getValIDTerminalRuleCall_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDependentAlternative1Access().getValIDTerminalRuleCall_1_0_0();
			return obj;
		}
		return null;
	}

}

// val=ID flag?="kw1"
protected class DependentAlternative1_Group_1_1 extends GroupToken {
	
	public DependentAlternative1_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDependentAlternative1Access().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DependentAlternative1_FlagAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// val=ID
protected class DependentAlternative1_ValAssignment_1_1_0 extends AssignmentToken  {
	
	public DependentAlternative1_ValAssignment_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDependentAlternative1Access().getValAssignment_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DependentAlternative1_NumberSignDigitOneDigitNineKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDependentAlternative1Access().getValIDTerminalRuleCall_1_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDependentAlternative1Access().getValIDTerminalRuleCall_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// flag?="kw1"
protected class DependentAlternative1_FlagAssignment_1_1_1 extends AssignmentToken  {
	
	public DependentAlternative1_FlagAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDependentAlternative1Access().getFlagAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DependentAlternative1_ValAssignment_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("flag",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("flag");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDependentAlternative1Access().getFlagKw1Keyword_1_1_1_0();
			return obj;
		}
		return null;
	}

}




/************ end Rule DependentAlternative1 ****************/


/************ begin Rule DependentAlternative2 ****************
 *
 * DependentAlternative2:
 * 	"#20" (val+=ID val+=ID+ | val+=ID+ flag?="kw1");
 *
 **/

// "#20" (val+=ID val+=ID+ | val+=ID+ flag?="kw1")
protected class DependentAlternative2_Group extends GroupToken {
	
	public DependentAlternative2_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDependentAlternative2Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DependentAlternative2_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDependentAlternative2Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#20"
protected class DependentAlternative2_NumberSignDigitTwoDigitZeroKeyword_0 extends KeywordToken  {
	
	public DependentAlternative2_NumberSignDigitTwoDigitZeroKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDependentAlternative2Access().getNumberSignDigitTwoDigitZeroKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// val+=ID val+=ID+ | val+=ID+ flag?="kw1"
protected class DependentAlternative2_Alternatives_1 extends AlternativesToken {

	public DependentAlternative2_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDependentAlternative2Access().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DependentAlternative2_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DependentAlternative2_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// val+=ID val+=ID+
protected class DependentAlternative2_Group_1_0 extends GroupToken {
	
	public DependentAlternative2_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDependentAlternative2Access().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DependentAlternative2_ValAssignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// val+=ID
protected class DependentAlternative2_ValAssignment_1_0_0 extends AssignmentToken  {
	
	public DependentAlternative2_ValAssignment_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDependentAlternative2Access().getValAssignment_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DependentAlternative2_NumberSignDigitTwoDigitZeroKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDependentAlternative2Access().getValIDTerminalRuleCall_1_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDependentAlternative2Access().getValIDTerminalRuleCall_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// val+=ID+
protected class DependentAlternative2_ValAssignment_1_0_1 extends AssignmentToken  {
	
	public DependentAlternative2_ValAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDependentAlternative2Access().getValAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DependentAlternative2_ValAssignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DependentAlternative2_ValAssignment_1_0_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDependentAlternative2Access().getValIDTerminalRuleCall_1_0_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDependentAlternative2Access().getValIDTerminalRuleCall_1_0_1_0();
			return obj;
		}
		return null;
	}

}


// val+=ID+ flag?="kw1"
protected class DependentAlternative2_Group_1_1 extends GroupToken {
	
	public DependentAlternative2_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDependentAlternative2Access().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DependentAlternative2_FlagAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// val+=ID+
protected class DependentAlternative2_ValAssignment_1_1_0 extends AssignmentToken  {
	
	public DependentAlternative2_ValAssignment_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDependentAlternative2Access().getValAssignment_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DependentAlternative2_ValAssignment_1_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DependentAlternative2_NumberSignDigitTwoDigitZeroKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDependentAlternative2Access().getValIDTerminalRuleCall_1_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDependentAlternative2Access().getValIDTerminalRuleCall_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// flag?="kw1"
protected class DependentAlternative2_FlagAssignment_1_1_1 extends AssignmentToken  {
	
	public DependentAlternative2_FlagAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDependentAlternative2Access().getFlagAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DependentAlternative2_ValAssignment_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("flag",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("flag");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDependentAlternative2Access().getFlagKw1Keyword_1_1_1_0();
			return obj;
		}
		return null;
	}

}




/************ end Rule DependentAlternative2 ****************/


/************ begin Rule Optional ****************
 *
 * Optional:
 * 	"#21" int0=INT (int1=INT int2=INT)?;
 *
 **/

// "#21" int0=INT (int1=INT int2=INT)?
protected class Optional_Group extends GroupToken {
	
	public Optional_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOptionalAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Optional_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Optional_Int0Assignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getOptionalRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#21"
protected class Optional_NumberSignDigitTwoDigitOneKeyword_0 extends KeywordToken  {
	
	public Optional_NumberSignDigitTwoDigitOneKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOptionalAccess().getNumberSignDigitTwoDigitOneKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// int0=INT
protected class Optional_Int0Assignment_1 extends AssignmentToken  {
	
	public Optional_Int0Assignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOptionalAccess().getInt0Assignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Optional_NumberSignDigitTwoDigitOneKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("int0",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("int0");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getOptionalAccess().getInt0INTTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getOptionalAccess().getInt0INTTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// (int1=INT int2=INT)?
protected class Optional_Group_2 extends GroupToken {
	
	public Optional_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOptionalAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Optional_Int2Assignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// int1=INT
protected class Optional_Int1Assignment_2_0 extends AssignmentToken  {
	
	public Optional_Int1Assignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOptionalAccess().getInt1Assignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Optional_Int0Assignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("int1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("int1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getOptionalAccess().getInt1INTTerminalRuleCall_2_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getOptionalAccess().getInt1INTTerminalRuleCall_2_0_0();
			return obj;
		}
		return null;
	}

}

// int2=INT
protected class Optional_Int2Assignment_2_1 extends AssignmentToken  {
	
	public Optional_Int2Assignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOptionalAccess().getInt2Assignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Optional_Int1Assignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("int2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("int2");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getOptionalAccess().getInt2INTTerminalRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getOptionalAccess().getInt2INTTerminalRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}



/************ end Rule Optional ****************/


/************ begin Rule Float ****************
 *
 * Float:
 * 	"#22" {Float} "Bye";
 *
 **/

// "#22" {Float} "Bye"
protected class Float_Group extends GroupToken {
	
	public Float_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFloatAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Float_ByeKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFloatAccess().getFloatAction_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#22"
protected class Float_NumberSignDigitTwoDigitTwoKeyword_0 extends KeywordToken  {
	
	public Float_NumberSignDigitTwoDigitTwoKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFloatAccess().getNumberSignDigitTwoDigitTwoKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// {Float}
protected class Float_FloatAction_1 extends ActionToken  {

	public Float_FloatAction_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getFloatAccess().getFloatAction_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Float_NumberSignDigitTwoDigitTwoKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "Bye"
protected class Float_ByeKeyword_2 extends KeywordToken  {
	
	public Float_ByeKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFloatAccess().getByeKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Float_FloatAction_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Float ****************/


/************ begin Rule UnorderedAlternative ****************
 *
 * UnorderedAlternative:
 * 	"#23" {UnorderedAlternative} (val1+=ID | val2+=INT | val3+=UnorderedAlternativeVal |
 * 	val4+=UnorderedAlternativeValDelegate)*;
 *
 **/

// "#23" {UnorderedAlternative} (val1+=ID | val2+=INT | val3+=UnorderedAlternativeVal |
// val4+=UnorderedAlternativeValDelegate)*
protected class UnorderedAlternative_Group extends GroupToken {
	
	public UnorderedAlternative_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getUnorderedAlternativeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedAlternative_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new UnorderedAlternative_UnorderedAlternativeAction_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getUnorderedAlternativeAccess().getUnorderedAlternativeAction_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#23"
protected class UnorderedAlternative_NumberSignDigitTwoDigitThreeKeyword_0 extends KeywordToken  {
	
	public UnorderedAlternative_NumberSignDigitTwoDigitThreeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getUnorderedAlternativeAccess().getNumberSignDigitTwoDigitThreeKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// {UnorderedAlternative}
protected class UnorderedAlternative_UnorderedAlternativeAction_1 extends ActionToken  {

	public UnorderedAlternative_UnorderedAlternativeAction_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getUnorderedAlternativeAccess().getUnorderedAlternativeAction_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedAlternative_NumberSignDigitTwoDigitThreeKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// (val1+=ID | val2+=INT | val3+=UnorderedAlternativeVal | val4+=UnorderedAlternativeValDelegate)*
protected class UnorderedAlternative_Alternatives_2 extends AlternativesToken {

	public UnorderedAlternative_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getUnorderedAlternativeAccess().getAlternatives_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedAlternative_Val1Assignment_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new UnorderedAlternative_Val2Assignment_2_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new UnorderedAlternative_Val3Assignment_2_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new UnorderedAlternative_Val4Assignment_2_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// val1+=ID
protected class UnorderedAlternative_Val1Assignment_2_0 extends AssignmentToken  {
	
	public UnorderedAlternative_Val1Assignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedAlternativeAccess().getVal1Assignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedAlternative_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new UnorderedAlternative_UnorderedAlternativeAction_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getUnorderedAlternativeAccess().getVal1IDTerminalRuleCall_2_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getUnorderedAlternativeAccess().getVal1IDTerminalRuleCall_2_0_0();
			return obj;
		}
		return null;
	}

}

// val2+=INT
protected class UnorderedAlternative_Val2Assignment_2_1 extends AssignmentToken  {
	
	public UnorderedAlternative_Val2Assignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedAlternativeAccess().getVal2Assignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedAlternative_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new UnorderedAlternative_UnorderedAlternativeAction_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val2");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getUnorderedAlternativeAccess().getVal2INTTerminalRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getUnorderedAlternativeAccess().getVal2INTTerminalRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}

// val3+=UnorderedAlternativeVal
protected class UnorderedAlternative_Val3Assignment_2_2 extends AssignmentToken  {
	
	public UnorderedAlternative_Val3Assignment_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedAlternativeAccess().getVal3Assignment_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedAlternativeVal_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val3",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val3");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getUnorderedAlternativeValRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getUnorderedAlternativeAccess().getVal3UnorderedAlternativeValParserRuleCall_2_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new UnorderedAlternative_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new UnorderedAlternative_UnorderedAlternativeAction_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// val4+=UnorderedAlternativeValDelegate
protected class UnorderedAlternative_Val4Assignment_2_3 extends AssignmentToken  {
	
	public UnorderedAlternative_Val4Assignment_2_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedAlternativeAccess().getVal4Assignment_2_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedAlternativeValDelegate_UnorderedAlternativeVal2ParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val4",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val4");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getUnorderedAlternativeValDelegateRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getUnorderedAlternativeAccess().getVal4UnorderedAlternativeValDelegateParserRuleCall_2_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new UnorderedAlternative_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new UnorderedAlternative_UnorderedAlternativeAction_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



/************ end Rule UnorderedAlternative ****************/


/************ begin Rule UnorderedAlternativeVal ****************
 *
 * UnorderedAlternativeVal:
 * 	"kw1" val=ID;
 *
 **/

// "kw1" val=ID
protected class UnorderedAlternativeVal_Group extends GroupToken {
	
	public UnorderedAlternativeVal_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getUnorderedAlternativeValAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedAlternativeVal_ValAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getUnorderedAlternativeValRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "kw1"
protected class UnorderedAlternativeVal_Kw1Keyword_0 extends KeywordToken  {
	
	public UnorderedAlternativeVal_Kw1Keyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getUnorderedAlternativeValAccess().getKw1Keyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// val=ID
protected class UnorderedAlternativeVal_ValAssignment_1 extends AssignmentToken  {
	
	public UnorderedAlternativeVal_ValAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedAlternativeValAccess().getValAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedAlternativeVal_Kw1Keyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getUnorderedAlternativeValAccess().getValIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getUnorderedAlternativeValAccess().getValIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule UnorderedAlternativeVal ****************/


/************ begin Rule UnorderedAlternativeValDelegate ****************
 *
 * UnorderedAlternativeValDelegate:
 * 	UnorderedAlternativeVal2;
 *
 **/

// UnorderedAlternativeVal2
protected class UnorderedAlternativeValDelegate_UnorderedAlternativeVal2ParserRuleCall extends RuleCallToken {
	
	public UnorderedAlternativeValDelegate_UnorderedAlternativeVal2ParserRuleCall(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getUnorderedAlternativeValDelegateAccess().getUnorderedAlternativeVal2ParserRuleCall();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedAlternativeVal2_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getUnorderedAlternativeVal2Rule().getType().getClassifier())
			return null;
		if(checkForRecursion(UnorderedAlternativeVal2_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

/************ end Rule UnorderedAlternativeValDelegate ****************/


/************ begin Rule UnorderedAlternativeVal2 ****************
 *
 * UnorderedAlternativeVal2:
 * 	"kw2" val=ID;
 *
 **/

// "kw2" val=ID
protected class UnorderedAlternativeVal2_Group extends GroupToken {
	
	public UnorderedAlternativeVal2_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getUnorderedAlternativeVal2Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedAlternativeVal2_ValAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getUnorderedAlternativeVal2Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "kw2"
protected class UnorderedAlternativeVal2_Kw2Keyword_0 extends KeywordToken  {
	
	public UnorderedAlternativeVal2_Kw2Keyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getUnorderedAlternativeVal2Access().getKw2Keyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// val=ID
protected class UnorderedAlternativeVal2_ValAssignment_1 extends AssignmentToken  {
	
	public UnorderedAlternativeVal2_ValAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedAlternativeVal2Access().getValAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedAlternativeVal2_Kw2Keyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getUnorderedAlternativeVal2Access().getValIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getUnorderedAlternativeVal2Access().getValIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule UnorderedAlternativeVal2 ****************/


/************ begin Rule UnorderedGroup ****************
 *
 * UnorderedGroup:
 * 	"#24" (val1=ID & val2=INT & val3=UnorderedGroupVal & val4=UnorderedGroupValDelegate);
 *
 **/

// "#24" (val1=ID & val2=INT & val3=UnorderedGroupVal & val4=UnorderedGroupValDelegate)
protected class UnorderedGroup_Group extends GroupToken {
	
	public UnorderedGroup_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getUnorderedGroupAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroup_UnorderedGroup_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getUnorderedGroupRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#24"
protected class UnorderedGroup_NumberSignDigitTwoDigitFourKeyword_0 extends KeywordToken  {
	
	public UnorderedGroup_NumberSignDigitTwoDigitFourKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getUnorderedGroupAccess().getNumberSignDigitTwoDigitFourKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// val1=ID & val2=INT & val3=UnorderedGroupVal & val4=UnorderedGroupValDelegate
protected class UnorderedGroup_UnorderedGroup_1 extends UnorderedGroupToken {
	
	public UnorderedGroup_UnorderedGroup_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getUnorderedGroupAccess().getUnorderedGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroup_Val4Assignment_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// val1=ID
protected class UnorderedGroup_Val1Assignment_1_0 extends AssignmentToken  {
	
	public UnorderedGroup_Val1Assignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedGroupAccess().getVal1Assignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroup_NumberSignDigitTwoDigitFourKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val1",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getUnorderedGroupAccess().getVal1IDTerminalRuleCall_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getUnorderedGroupAccess().getVal1IDTerminalRuleCall_1_0_0();
			return obj;
		}
		return null;
	}

}

// val2=INT
protected class UnorderedGroup_Val2Assignment_1_1 extends AssignmentToken  {
	
	public UnorderedGroup_Val2Assignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedGroupAccess().getVal2Assignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroup_Val1Assignment_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val2",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val2");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getUnorderedGroupAccess().getVal2INTTerminalRuleCall_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getUnorderedGroupAccess().getVal2INTTerminalRuleCall_1_1_0();
			return obj;
		}
		return null;
	}

}

// val3=UnorderedGroupVal
protected class UnorderedGroup_Val3Assignment_1_2 extends AssignmentToken  {
	
	public UnorderedGroup_Val3Assignment_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedGroupAccess().getVal3Assignment_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupVal_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val3",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val3");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getUnorderedGroupValRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getUnorderedGroupAccess().getVal3UnorderedGroupValParserRuleCall_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new UnorderedGroup_Val2Assignment_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// val4=UnorderedGroupValDelegate
protected class UnorderedGroup_Val4Assignment_1_3 extends AssignmentToken  {
	
	public UnorderedGroup_Val4Assignment_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedGroupAccess().getVal4Assignment_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupValDelegate_UnorderedGroupVal2ParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val4",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val4");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getUnorderedGroupValDelegateRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getUnorderedGroupAccess().getVal4UnorderedGroupValDelegateParserRuleCall_1_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new UnorderedGroup_Val3Assignment_1_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



/************ end Rule UnorderedGroup ****************/


/************ begin Rule UnorderedGroupVal ****************
 *
 * UnorderedGroupVal:
 * 	"kw1" val=ID;
 *
 **/

// "kw1" val=ID
protected class UnorderedGroupVal_Group extends GroupToken {
	
	public UnorderedGroupVal_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getUnorderedGroupValAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupVal_ValAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getUnorderedGroupValRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "kw1"
protected class UnorderedGroupVal_Kw1Keyword_0 extends KeywordToken  {
	
	public UnorderedGroupVal_Kw1Keyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getUnorderedGroupValAccess().getKw1Keyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// val=ID
protected class UnorderedGroupVal_ValAssignment_1 extends AssignmentToken  {
	
	public UnorderedGroupVal_ValAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedGroupValAccess().getValAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupVal_Kw1Keyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getUnorderedGroupValAccess().getValIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getUnorderedGroupValAccess().getValIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule UnorderedGroupVal ****************/


/************ begin Rule UnorderedGroupValDelegate ****************
 *
 * UnorderedGroupValDelegate:
 * 	UnorderedGroupVal2;
 *
 **/

// UnorderedGroupVal2
protected class UnorderedGroupValDelegate_UnorderedGroupVal2ParserRuleCall extends RuleCallToken {
	
	public UnorderedGroupValDelegate_UnorderedGroupVal2ParserRuleCall(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getUnorderedGroupValDelegateAccess().getUnorderedGroupVal2ParserRuleCall();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupVal2_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getUnorderedGroupVal2Rule().getType().getClassifier())
			return null;
		if(checkForRecursion(UnorderedGroupVal2_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

/************ end Rule UnorderedGroupValDelegate ****************/


/************ begin Rule UnorderedGroupVal2 ****************
 *
 * UnorderedGroupVal2:
 * 	"kw2" val=ID;
 *
 **/

// "kw2" val=ID
protected class UnorderedGroupVal2_Group extends GroupToken {
	
	public UnorderedGroupVal2_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getUnorderedGroupVal2Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupVal2_ValAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getUnorderedGroupVal2Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "kw2"
protected class UnorderedGroupVal2_Kw2Keyword_0 extends KeywordToken  {
	
	public UnorderedGroupVal2_Kw2Keyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getUnorderedGroupVal2Access().getKw2Keyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// val=ID
protected class UnorderedGroupVal2_ValAssignment_1 extends AssignmentToken  {
	
	public UnorderedGroupVal2_ValAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedGroupVal2Access().getValAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupVal2_Kw2Keyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getUnorderedGroupVal2Access().getValIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getUnorderedGroupVal2Access().getValIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule UnorderedGroupVal2 ****************/


/************ begin Rule UnorderedGroupOptional ****************
 *
 * UnorderedGroupOptional:
 * 	"#25" {UnorderedGroupOptional} (("kw1" val1=ID)? & ("kw2" va2=ID)? & ("kw3" val3=ID)?);
 *
 **/

// "#25" {UnorderedGroupOptional} (("kw1" val1=ID)? & ("kw2" va2=ID)? & ("kw3" val3=ID)?)
protected class UnorderedGroupOptional_Group extends GroupToken {
	
	public UnorderedGroupOptional_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getUnorderedGroupOptionalAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupOptional_UnorderedGroup_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getUnorderedGroupOptionalAccess().getUnorderedGroupOptionalAction_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#25"
protected class UnorderedGroupOptional_NumberSignDigitTwoDigitFiveKeyword_0 extends KeywordToken  {
	
	public UnorderedGroupOptional_NumberSignDigitTwoDigitFiveKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getUnorderedGroupOptionalAccess().getNumberSignDigitTwoDigitFiveKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// {UnorderedGroupOptional}
protected class UnorderedGroupOptional_UnorderedGroupOptionalAction_1 extends ActionToken  {

	public UnorderedGroupOptional_UnorderedGroupOptionalAction_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getUnorderedGroupOptionalAccess().getUnorderedGroupOptionalAction_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupOptional_NumberSignDigitTwoDigitFiveKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// ("kw1" val1=ID)? & ("kw2" va2=ID)? & ("kw3" val3=ID)?
protected class UnorderedGroupOptional_UnorderedGroup_2 extends UnorderedGroupToken {
	
	public UnorderedGroupOptional_UnorderedGroup_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getUnorderedGroupOptionalAccess().getUnorderedGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupOptional_Group_2_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new UnorderedGroupOptional_Group_2_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new UnorderedGroupOptional_Group_2_0(lastRuleCallOrigin, this, 2, inst);
			case 3: return new UnorderedGroupOptional_UnorderedGroupOptionalAction_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ("kw1" val1=ID)?
protected class UnorderedGroupOptional_Group_2_0 extends GroupToken {
	
	public UnorderedGroupOptional_Group_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getUnorderedGroupOptionalAccess().getGroup_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupOptional_Val1Assignment_2_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "kw1"
protected class UnorderedGroupOptional_Kw1Keyword_2_0_0 extends KeywordToken  {
	
	public UnorderedGroupOptional_Kw1Keyword_2_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getUnorderedGroupOptionalAccess().getKw1Keyword_2_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupOptional_UnorderedGroupOptionalAction_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// val1=ID
protected class UnorderedGroupOptional_Val1Assignment_2_0_1 extends AssignmentToken  {
	
	public UnorderedGroupOptional_Val1Assignment_2_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedGroupOptionalAccess().getVal1Assignment_2_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupOptional_Kw1Keyword_2_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val1",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getUnorderedGroupOptionalAccess().getVal1IDTerminalRuleCall_2_0_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getUnorderedGroupOptionalAccess().getVal1IDTerminalRuleCall_2_0_1_0();
			return obj;
		}
		return null;
	}

}


// ("kw2" va2=ID)?
protected class UnorderedGroupOptional_Group_2_1 extends GroupToken {
	
	public UnorderedGroupOptional_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getUnorderedGroupOptionalAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupOptional_Va2Assignment_2_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "kw2"
protected class UnorderedGroupOptional_Kw2Keyword_2_1_0 extends KeywordToken  {
	
	public UnorderedGroupOptional_Kw2Keyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getUnorderedGroupOptionalAccess().getKw2Keyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupOptional_Group_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new UnorderedGroupOptional_UnorderedGroupOptionalAction_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// va2=ID
protected class UnorderedGroupOptional_Va2Assignment_2_1_1 extends AssignmentToken  {
	
	public UnorderedGroupOptional_Va2Assignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedGroupOptionalAccess().getVa2Assignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupOptional_Kw2Keyword_2_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("va2",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("va2");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getUnorderedGroupOptionalAccess().getVa2IDTerminalRuleCall_2_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getUnorderedGroupOptionalAccess().getVa2IDTerminalRuleCall_2_1_1_0();
			return obj;
		}
		return null;
	}

}


// ("kw3" val3=ID)?
protected class UnorderedGroupOptional_Group_2_2 extends GroupToken {
	
	public UnorderedGroupOptional_Group_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getUnorderedGroupOptionalAccess().getGroup_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupOptional_Val3Assignment_2_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "kw3"
protected class UnorderedGroupOptional_Kw3Keyword_2_2_0 extends KeywordToken  {
	
	public UnorderedGroupOptional_Kw3Keyword_2_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getUnorderedGroupOptionalAccess().getKw3Keyword_2_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupOptional_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new UnorderedGroupOptional_Group_2_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new UnorderedGroupOptional_UnorderedGroupOptionalAction_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// val3=ID
protected class UnorderedGroupOptional_Val3Assignment_2_2_1 extends AssignmentToken  {
	
	public UnorderedGroupOptional_Val3Assignment_2_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedGroupOptionalAccess().getVal3Assignment_2_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupOptional_Kw3Keyword_2_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val3",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val3");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getUnorderedGroupOptionalAccess().getVal3IDTerminalRuleCall_2_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getUnorderedGroupOptionalAccess().getVal3IDTerminalRuleCall_2_2_1_0();
			return obj;
		}
		return null;
	}

}




/************ end Rule UnorderedGroupOptional ****************/


/************ begin Rule UnorderedGroupBoolean ****************
 *
 * UnorderedGroupBoolean:
 * 	"#26" {UnorderedGroupBoolean} (val1?="kw1"? & val2?="kw2"? & val3?="kw3"?);
 *
 **/

// "#26" {UnorderedGroupBoolean} (val1?="kw1"? & val2?="kw2"? & val3?="kw3"?)
protected class UnorderedGroupBoolean_Group extends GroupToken {
	
	public UnorderedGroupBoolean_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getUnorderedGroupBooleanAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupBoolean_UnorderedGroup_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getUnorderedGroupBooleanAccess().getUnorderedGroupBooleanAction_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#26"
protected class UnorderedGroupBoolean_NumberSignDigitTwoDigitSixKeyword_0 extends KeywordToken  {
	
	public UnorderedGroupBoolean_NumberSignDigitTwoDigitSixKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getUnorderedGroupBooleanAccess().getNumberSignDigitTwoDigitSixKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// {UnorderedGroupBoolean}
protected class UnorderedGroupBoolean_UnorderedGroupBooleanAction_1 extends ActionToken  {

	public UnorderedGroupBoolean_UnorderedGroupBooleanAction_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getUnorderedGroupBooleanAccess().getUnorderedGroupBooleanAction_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupBoolean_NumberSignDigitTwoDigitSixKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// val1?="kw1"? & val2?="kw2"? & val3?="kw3"?
protected class UnorderedGroupBoolean_UnorderedGroup_2 extends UnorderedGroupToken {
	
	public UnorderedGroupBoolean_UnorderedGroup_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getUnorderedGroupBooleanAccess().getUnorderedGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupBoolean_Val3Assignment_2_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new UnorderedGroupBoolean_Val2Assignment_2_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new UnorderedGroupBoolean_Val1Assignment_2_0(lastRuleCallOrigin, this, 2, inst);
			case 3: return new UnorderedGroupBoolean_UnorderedGroupBooleanAction_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// val1?="kw1"?
protected class UnorderedGroupBoolean_Val1Assignment_2_0 extends AssignmentToken  {
	
	public UnorderedGroupBoolean_Val1Assignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedGroupBooleanAccess().getVal1Assignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupBoolean_UnorderedGroupBooleanAction_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val1",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val1");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getUnorderedGroupBooleanAccess().getVal1Kw1Keyword_2_0_0();
			return obj;
		}
		return null;
	}

}

// val2?="kw2"?
protected class UnorderedGroupBoolean_Val2Assignment_2_1 extends AssignmentToken  {
	
	public UnorderedGroupBoolean_Val2Assignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedGroupBooleanAccess().getVal2Assignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupBoolean_Val1Assignment_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new UnorderedGroupBoolean_UnorderedGroupBooleanAction_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val2",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val2");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getUnorderedGroupBooleanAccess().getVal2Kw2Keyword_2_1_0();
			return obj;
		}
		return null;
	}

}

// val3?="kw3"?
protected class UnorderedGroupBoolean_Val3Assignment_2_2 extends AssignmentToken  {
	
	public UnorderedGroupBoolean_Val3Assignment_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedGroupBooleanAccess().getVal3Assignment_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnorderedGroupBoolean_Val2Assignment_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new UnorderedGroupBoolean_Val1Assignment_2_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new UnorderedGroupBoolean_UnorderedGroupBooleanAction_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val3",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val3");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getUnorderedGroupBooleanAccess().getVal3Kw3Keyword_2_2_0();
			return obj;
		}
		return null;
	}

}



/************ end Rule UnorderedGroupBoolean ****************/


/************ begin Rule Complex1 ****************
 *
 * Complex1:
 * 	"#27" {Complex1} ("kw1" val1=ID)? ("kw2" val2=ID)? ("kw3" val3+=ID | "kw4" val4+=ID | "kw5" val5+=ID | "kw6"
 * 	val6+=ID)*;
 *
 **/

// "#27" {Complex1} ("kw1" val1=ID)? ("kw2" val2=ID)? ("kw3" val3+=ID | "kw4" val4+=ID | "kw5" val5+=ID | "kw6" val6+=ID)*
protected class Complex1_Group extends GroupToken {
	
	public Complex1_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComplex1Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Complex1_Alternatives_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Complex1_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Complex1_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Complex1_Complex1Action_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getComplex1Access().getComplex1Action_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#27"
protected class Complex1_NumberSignDigitTwoDigitSevenKeyword_0 extends KeywordToken  {
	
	public Complex1_NumberSignDigitTwoDigitSevenKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComplex1Access().getNumberSignDigitTwoDigitSevenKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// {Complex1}
protected class Complex1_Complex1Action_1 extends ActionToken  {

	public Complex1_Complex1Action_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getComplex1Access().getComplex1Action_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Complex1_NumberSignDigitTwoDigitSevenKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// ("kw1" val1=ID)?
protected class Complex1_Group_2 extends GroupToken {
	
	public Complex1_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComplex1Access().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Complex1_Val1Assignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "kw1"
protected class Complex1_Kw1Keyword_2_0 extends KeywordToken  {
	
	public Complex1_Kw1Keyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComplex1Access().getKw1Keyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Complex1_Complex1Action_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// val1=ID
protected class Complex1_Val1Assignment_2_1 extends AssignmentToken  {
	
	public Complex1_Val1Assignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComplex1Access().getVal1Assignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Complex1_Kw1Keyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val1",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getComplex1Access().getVal1IDTerminalRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getComplex1Access().getVal1IDTerminalRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}


// ("kw2" val2=ID)?
protected class Complex1_Group_3 extends GroupToken {
	
	public Complex1_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComplex1Access().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Complex1_Val2Assignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "kw2"
protected class Complex1_Kw2Keyword_3_0 extends KeywordToken  {
	
	public Complex1_Kw2Keyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComplex1Access().getKw2Keyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Complex1_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Complex1_Complex1Action_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// val2=ID
protected class Complex1_Val2Assignment_3_1 extends AssignmentToken  {
	
	public Complex1_Val2Assignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComplex1Access().getVal2Assignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Complex1_Kw2Keyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val2",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val2");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getComplex1Access().getVal2IDTerminalRuleCall_3_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getComplex1Access().getVal2IDTerminalRuleCall_3_1_0();
			return obj;
		}
		return null;
	}

}


// ("kw3" val3+=ID | "kw4" val4+=ID | "kw5" val5+=ID | "kw6" val6+=ID)*
protected class Complex1_Alternatives_4 extends AlternativesToken {

	public Complex1_Alternatives_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getComplex1Access().getAlternatives_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Complex1_Group_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Complex1_Group_4_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Complex1_Group_4_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Complex1_Group_4_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// "kw3" val3+=ID
protected class Complex1_Group_4_0 extends GroupToken {
	
	public Complex1_Group_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComplex1Access().getGroup_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Complex1_Val3Assignment_4_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "kw3"
protected class Complex1_Kw3Keyword_4_0_0 extends KeywordToken  {
	
	public Complex1_Kw3Keyword_4_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComplex1Access().getKw3Keyword_4_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Complex1_Alternatives_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Complex1_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Complex1_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Complex1_Complex1Action_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// val3+=ID
protected class Complex1_Val3Assignment_4_0_1 extends AssignmentToken  {
	
	public Complex1_Val3Assignment_4_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComplex1Access().getVal3Assignment_4_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Complex1_Kw3Keyword_4_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val3",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val3");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getComplex1Access().getVal3IDTerminalRuleCall_4_0_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getComplex1Access().getVal3IDTerminalRuleCall_4_0_1_0();
			return obj;
		}
		return null;
	}

}


// "kw4" val4+=ID
protected class Complex1_Group_4_1 extends GroupToken {
	
	public Complex1_Group_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComplex1Access().getGroup_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Complex1_Val4Assignment_4_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "kw4"
protected class Complex1_Kw4Keyword_4_1_0 extends KeywordToken  {
	
	public Complex1_Kw4Keyword_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComplex1Access().getKw4Keyword_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Complex1_Alternatives_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Complex1_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Complex1_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Complex1_Complex1Action_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// val4+=ID
protected class Complex1_Val4Assignment_4_1_1 extends AssignmentToken  {
	
	public Complex1_Val4Assignment_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComplex1Access().getVal4Assignment_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Complex1_Kw4Keyword_4_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val4",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val4");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getComplex1Access().getVal4IDTerminalRuleCall_4_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getComplex1Access().getVal4IDTerminalRuleCall_4_1_1_0();
			return obj;
		}
		return null;
	}

}


// "kw5" val5+=ID
protected class Complex1_Group_4_2 extends GroupToken {
	
	public Complex1_Group_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComplex1Access().getGroup_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Complex1_Val5Assignment_4_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "kw5"
protected class Complex1_Kw5Keyword_4_2_0 extends KeywordToken  {
	
	public Complex1_Kw5Keyword_4_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComplex1Access().getKw5Keyword_4_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Complex1_Alternatives_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Complex1_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Complex1_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Complex1_Complex1Action_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// val5+=ID
protected class Complex1_Val5Assignment_4_2_1 extends AssignmentToken  {
	
	public Complex1_Val5Assignment_4_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComplex1Access().getVal5Assignment_4_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Complex1_Kw5Keyword_4_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val5",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val5");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getComplex1Access().getVal5IDTerminalRuleCall_4_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getComplex1Access().getVal5IDTerminalRuleCall_4_2_1_0();
			return obj;
		}
		return null;
	}

}


// "kw6" val6+=ID
protected class Complex1_Group_4_3 extends GroupToken {
	
	public Complex1_Group_4_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComplex1Access().getGroup_4_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Complex1_Val6Assignment_4_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "kw6"
protected class Complex1_Kw6Keyword_4_3_0 extends KeywordToken  {
	
	public Complex1_Kw6Keyword_4_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComplex1Access().getKw6Keyword_4_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Complex1_Alternatives_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Complex1_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Complex1_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Complex1_Complex1Action_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// val6+=ID
protected class Complex1_Val6Assignment_4_3_1 extends AssignmentToken  {
	
	public Complex1_Val6Assignment_4_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComplex1Access().getVal6Assignment_4_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Complex1_Kw6Keyword_4_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val6",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val6");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getComplex1Access().getVal6IDTerminalRuleCall_4_3_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getComplex1Access().getVal6IDTerminalRuleCall_4_3_1_0();
			return obj;
		}
		return null;
	}

}




/************ end Rule Complex1 ****************/


/************ begin Rule OptionalDouble ****************
 *
 * OptionalDouble:
 * 	"#28" double0=DOUBLE (double1=DOUBLE double2=DOUBLE)?;
 *
 **/

// "#28" double0=DOUBLE (double1=DOUBLE double2=DOUBLE)?
protected class OptionalDouble_Group extends GroupToken {
	
	public OptionalDouble_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOptionalDoubleAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OptionalDouble_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new OptionalDouble_Double0Assignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getOptionalDoubleRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#28"
protected class OptionalDouble_NumberSignDigitTwoDigitEightKeyword_0 extends KeywordToken  {
	
	public OptionalDouble_NumberSignDigitTwoDigitEightKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOptionalDoubleAccess().getNumberSignDigitTwoDigitEightKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// double0=DOUBLE
protected class OptionalDouble_Double0Assignment_1 extends AssignmentToken  {
	
	public OptionalDouble_Double0Assignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOptionalDoubleAccess().getDouble0Assignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OptionalDouble_NumberSignDigitTwoDigitEightKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("double0",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("double0");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getOptionalDoubleAccess().getDouble0DOUBLEParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getOptionalDoubleAccess().getDouble0DOUBLEParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// (double1=DOUBLE double2=DOUBLE)?
protected class OptionalDouble_Group_2 extends GroupToken {
	
	public OptionalDouble_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOptionalDoubleAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OptionalDouble_Double2Assignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// double1=DOUBLE
protected class OptionalDouble_Double1Assignment_2_0 extends AssignmentToken  {
	
	public OptionalDouble_Double1Assignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOptionalDoubleAccess().getDouble1Assignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OptionalDouble_Double0Assignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("double1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("double1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getOptionalDoubleAccess().getDouble1DOUBLEParserRuleCall_2_0_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getOptionalDoubleAccess().getDouble1DOUBLEParserRuleCall_2_0_0();
			return obj;
		}
		return null;
	}

}

// double2=DOUBLE
protected class OptionalDouble_Double2Assignment_2_1 extends AssignmentToken  {
	
	public OptionalDouble_Double2Assignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOptionalDoubleAccess().getDouble2Assignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OptionalDouble_Double1Assignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("double2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("double2");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getOptionalDoubleAccess().getDouble2DOUBLEParserRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getOptionalDoubleAccess().getDouble2DOUBLEParserRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}



/************ end Rule OptionalDouble ****************/


}
