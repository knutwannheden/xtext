«REM»
/*******************************************************************************
 * Copyright (c) 2008 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 *******************************************************************************/
«ENDREM»

«IMPORT org::eclipse::xtext»

«EXTENSION org::eclipse::xtext::ui::generator::labeling::Extensions»
«EXTENSION org::eclipse::xtext::generator::Naming»

«DEFINE generate(Boolean generateStub, Boolean generateXtendStub) FOR Grammar»
	«IF generateStub»
		«IF generateXtendStub»
			«EXPAND xtendEObjectLabelProvider»
			«EXPAND xtendDescriptionLabelProvider»
		«ELSE»
			«EXPAND eObjectLabelProvider»
			«EXPAND descriptionLabelProvider»
		«ENDIF»
	«ENDIF» 
«ENDDEFINE»

«DEFINE eObjectLabelProvider FOR Grammar-»
«FILE eObjectLabelProviderQualifiedName().asPath()+".java" SRC_UI -»
/*
«fileHeader()»
*/
package «eObjectLabelProviderQualifiedName().toJavaPackage()»;

import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
«IF usesXbase()»import org.eclipse.xtext.xbase.ui.labeling.XbaseLabelProvider;«ELSE»import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;«ENDIF» 
 
import com.google.inject.Inject;

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#labelProvider
 */
public class «eObjectLabelProviderQualifiedName().toSimpleName()» extends «IF usesXbase()»XbaseLabelProvider«ELSE»DefaultEObjectLabelProvider«ENDIF» {

	@Inject
	public «eObjectLabelProviderQualifiedName().toSimpleName()»(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	// Labels and icons can be computed like this:
	
//	String text(Greeting ele) {
//		return "A greeting to " + ele.getName();
//	}
//
//	String image(Greeting ele) {
//		return "Greeting.gif";
//	}
}
«ENDFILE»
«ENDDEFINE»

«DEFINE xtendEObjectLabelProvider FOR Grammar-»
«FILE eObjectLabelProviderQualifiedName().asPath()+".xtend" SRC_UI -»
/*
«fileHeader()»
*/
package «eObjectLabelProviderQualifiedName().toJavaPackage()»

import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider
«IF usesXbase()»import org.eclipse.xtext.xbase.ui.labeling.XbaseLabelProvider«ELSE»import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider«ENDIF» 
 
import com.google.inject.Inject

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#labelProvider
 */
class «eObjectLabelProviderQualifiedName().toSimpleName()» extends «IF usesXbase()»XbaseLabelProvider«ELSE»DefaultEObjectLabelProvider«ENDIF» {

	@Inject
	new(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	// Labels and icons can be computed like this:
	
//	def text(Greeting ele) {
//		'A greeting to ' + ele.name
//	}
//
//	def image(Greeting ele) {
//		'Greeting.gif'
//	}
}
«ENDFILE»
«ENDDEFINE»

«DEFINE descriptionLabelProvider FOR Grammar-»
«FILE descriptionLabelProviderQualifiedName().asPath()+".java" SRC_UI -»
/*
«fileHeader()»
*/
package «descriptionLabelProviderQualifiedName().toJavaPackage()»;

«IF usesXbase()»import org.eclipse.xtext.xbase.ui.labeling.XbaseDescriptionLabelProvider;«ELSE»import org.eclipse.xtext.ui.label.DefaultDescriptionLabelProvider;«ENDIF»

/**
 * Provides labels for a IEObjectDescriptions and IResourceDescriptions.
 * 
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#labelProvider
 */
public class «descriptionLabelProviderQualifiedName().toSimpleName()» extends «IF usesXbase()»XbaseDescriptionLabelProvider«ELSE»DefaultDescriptionLabelProvider«ENDIF» {

	// Labels and icons can be computed like this:
	
//	String text(IEObjectDescription ele) {
//	   return ele.getName();
//	}
//	 
//  String image(IEObjectDescription ele) {
//     return ele.getEClass().getName() + ".gif";
//  }	 
}
«ENDFILE»
«ENDDEFINE»

«DEFINE xtendDescriptionLabelProvider FOR Grammar-»
«FILE descriptionLabelProviderQualifiedName().asPath()+".xtend" SRC_UI -»
/*
«fileHeader()»
*/
package «descriptionLabelProviderQualifiedName().toJavaPackage()»

«IF usesXbase()»import org.eclipse.xtext.xbase.ui.labeling.XbaseDescriptionLabelProvider«ELSE»import org.eclipse.xtext.ui.label.DefaultDescriptionLabelProvider«ENDIF»
//import org.eclipse.xtext.resource.IEObjectDescription

/**
 * Provides labels for a IEObjectDescriptions and IResourceDescriptions.
 * 
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#labelProvider
 */
class «descriptionLabelProviderQualifiedName().toSimpleName()» extends «IF usesXbase()»XbaseDescriptionLabelProvider«ELSE»DefaultDescriptionLabelProvider«ENDIF» {

	// Labels and icons can be computed like this:
	
//	override text(IEObjectDescription ele) {
//		ele.name
//	}
//	 
//	override image(IEObjectDescription ele) {
//		ele.EClass.name + '.gif'
//	}	 
}
«ENDFILE»
«ENDDEFINE»

«DEFINE addToPluginXmlRt(Boolean generateStub, Boolean generateXtendStub) FOR Grammar»«ENDDEFINE»

«DEFINE addToPluginXmlUi(Boolean generateStub, Boolean generateXtendStub) FOR Grammar»«ENDDEFINE»

«DEFINE addToStandaloneSetup(Boolean generateStub, Boolean generateXtendStub) FOR Grammar»«ENDDEFINE»