section2:xbaseLanguageRef_Syntax[Lexical Syntax]

Xbase comes with a small set of terminal rules, which can be overridden and hence changed by users. 
However the default implementation is carefully chosen and it is recommended to stick with the 
lexical syntax described in the following.

section3:Xbase_Syntax_Identifiers[Identifiers]

Identifiers are used to name all constructs, such as types, methods and variables. Xbase uses the default
identifier-syntax from Xtext - compared to Java, they are slightly simplified to match the common cases
while having less ambiguities. They start with a letter e[a]-e[z], e[A]-e[Z] or an underscore followed
by more of these characters or any digit e[0]-e[9]. 

section4:Xbase_Syntax_EscapedIdentifiers[Escaped Identifiers]

Identifiers must not have the same spelling as any reserved keyword. 
However, this limitation can be avoided by escaping identifiers with the prefix code[^]. Escaped identifiers 
are used in cases when there is a conflict with a reserved keyword. Imagine you have introduced a 
keyword code[service] in your language but want to call a Java property e[service]. 
In such cases you can use the escaped identifier code[^service] to reference the Java property.

section4[Syntax]

code[Xtext][
terminal ID: 
  '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
;
]

section4[Examples]

ul[
  item[code[Foo]]
  item[code[Foo42]]
  item[code[FOO]]
  item[code[_42]]
  item[code[_foo]]
  item[code[^extends]]
]

section3:Xbase_Syntax_Comments[Comments]

Xbase comes with two different kinds of comments: Single-line comments and multi-line comments.
The syntax is the same as the one known from Java (see link[http://docs.oracle.com/javase/specs/jls/se7/html/jls-3.html#jls-3.7][§ 3.7 Comments]).


section3:Xbase_Syntax_Whitespace[White Space]

The white space characters code[' '], code['\t'], code['\n'], and code['\r] are allowed to occur anywhere between the other syntactic elements. 

section3:Xbase_Syntax_Keywords[Reserved Keywords]

The following list of words are reserved keywords, thus reducing the set of possible identifiers:
ol[
  item[code[Xbase][as]]
    item[code[Xbase][case]]
    item[code[Xbase][catch]]
    item[code[Xbase][default]]
    item[code[Xbase][do]]
    item[code[Xbase][else]]
    item[code[Xbase][extends]]
    item[code[Xbase][false]]
    item[code[Xbase][finally]]
    item[code[Xbase][for]]
    item[code[Xbase][if]]
    item[code[Xbase][instanceof]]
    item[code[Xbase][new]]
    item[code[Xbase][null]]
    item[code[Xbase][return]]
    item[code[Xbase][super]]
    item[code[Xbase][switch]]
    item[code[Xbase][throw]]
    item[code[Xbase][true]]
    item[code[Xbase][try]]
    item[code[Xbase][typeof]]
    item[code[Xbase][val]]
    item[code[Xbase][var]]
    item[code[Xbase][while]]
]

In case some of the keywords have to be used as identifiers, the escape character for ref:Xbase_Syntax_EscapedIdentifiers[identifiers] comes in handy. 
